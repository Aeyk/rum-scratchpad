{
"version":3,
"file":"module$node_modules$audio_loader$lib$base64.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,2CAAf,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoCxGD,MAAA,CAAOC,OAAP,CAAiB,CAAEC,OArBnBA,QAAgB,CAACC,OAAD,CAAUC,WAAV,CAAuB,CACjCC,OAAAA,CAAUF,OAAA,CAAQG,OAAR,CAAgB,mBAAhB,CAAqC,EAArC,CACd,KAAIC,OAASF,OAATE,CAAiBC,MACjBC,YAAAA,CAAUL,WAAA,CACVM,IAAA,CAAKC,IAAL,EAAoB,CAApB,CAAWJ,MAAX,CAAwB,CAAxB,EAA6B,CAA7B,EAAkCH,WAAlC,CADU,CACuCA,WADvC,CAED,CAFC,CAEVG,MAFU,CAEG,CAFH,EAEQ,CAGtB,KAFA,IAAIK,QAAU,IAAIC,UAAJ,CAAeJ,WAAf,CAAd,CAESK,KAFT,CAEuBC,QAAU,CAFjC,CAEoCC,QAAU,CAF9C,CAEiDC,OAAS,CAA1D,CAA6DA,MAA7D,CAAsEV,MAAtE,CAA8EU,MAAA,EAA9E,CAAwF,CACtFC,KAAA,CAAQD,MAAR,CAAiB,CACK,KAAA,KAAAZ,OAAA,CAAQc,UAAR,CAAmBF,MAAnB,CAAtBF,QAAA,GApBY,EAAP,CAAAK,IAAA,EAAoB,EAApB,CAAaA,IAAb,CAAyBA,IAAzB;AAAgC,EAAhC,CACI,EAAP,CAAAA,IAAA,EAAoB,GAApB,CAAaA,IAAb,CAA0BA,IAA1B,CAAiC,EAAjC,CACO,EAAP,CAAAA,IAAA,EAAoB,EAApB,CAAaA,IAAb,CAAyBA,IAAzB,CAAgC,CAAhC,CACS,EAAT,GAAAA,IAAA,CAAc,EAAd,CACS,EAAT,GAAAA,IAAA,CAAc,EAAd,CACA,CAeF,GAAqD,EAArD,CAA0D,CAA1D,CAA8DF,KAC9D,IAAc,CAAd,GAAIA,KAAJ,EAAuC,CAAvC,GAAmBX,MAAnB,CAA4BU,MAA5B,CAA0C,CACxC,IAAKH,KAAL,CAAa,CAAb,CAAwB,CAAxB,CAAgBA,KAAhB,EAA6BE,OAA7B,CAAuCP,WAAvC,CAAgDK,KAAA,EAAA,CAASE,OAAA,EAAzD,CACEJ,OAAA,CAAQI,OAAR,CAAA,CAAmBD,OAAnB,IAAgC,EAAhC,GAAuCD,KAAvC,CAA+C,EAA/C,EAAqD,GAEvDC,QAAA,CAAU,CAJ8B,CAH4C,CAUxF,MAAOH,QAlB8B,CAqBtB,CApCuF;",
"sources":["node_modules/audio-loader/lib/base64.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$audio_loader$lib$base64\"] = function(global,require,module,exports) {\n'use strict'\n\n// DECODE UTILITIES\nfunction b64ToUint6 (nChr) {\n  return nChr > 64 && nChr < 91 ? nChr - 65\n    : nChr > 96 && nChr < 123 ? nChr - 71\n    : nChr > 47 && nChr < 58 ? nChr + 4\n    : nChr === 43 ? 62\n    : nChr === 47 ? 63\n    : 0\n}\n\n// Decode Base64 to Uint8Array\n// ---------------------------\nfunction decode (sBase64, nBlocksSize) {\n  var sB64Enc = sBase64.replace(/[^A-Za-z0-9\\+\\/]/g, '')\n  var nInLen = sB64Enc.length\n  var nOutLen = nBlocksSize\n    ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize\n    : nInLen * 3 + 1 >> 2\n  var taBytes = new Uint8Array(nOutLen)\n\n  for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n    nMod4 = nInIdx & 3\n    nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4\n    if (nMod4 === 3 || nInLen - nInIdx === 1) {\n      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255\n      }\n      nUint24 = 0\n    }\n  }\n  return taBytes\n}\n\nmodule.exports = { decode: decode }\n\n};"],
"names":["shadow$provide","global","require","module","exports","decode","sBase64","nBlocksSize","sB64Enc","replace","nInLen","length","nOutLen","Math","ceil","taBytes","Uint8Array","nMod3","nUint24","nOutIdx","nInIdx","nMod4","charCodeAt","nChr"]
}
