shadow$provide.module$node_modules$soundfont_player$lib$legacy=function(global,require,module,exports){function Soundfont(ctx,nameToUrl){console.warn("new Soundfont() is deprected");console.log("Please use Soundfont.instrument() instead of new Soundfont().instrument()");if(!(this instanceof Soundfont))return new Soundfont(ctx);this.nameToUrl=nameToUrl||Soundfont.nameToUrl;this.ctx=ctx;this.instruments={};this.promises=[]}function oscillatorPlayer(ctx,defaultOptions){defaultOptions=defaultOptions||
{};return function(note,time,duration,options){console.warn("The oscillator player is deprecated.");console.log("Starting with version 0.9.0 you will have to wait until the soundfont is loaded to play sounds.");var freq=(note=0<note&&129>note?+note:parser.midi(note))?parser.midiToFreq(note,440):null;if(freq){duration=duration||.2;options=options||{};note=options.destination||defaultOptions.destination||ctx.destination;var vcoType=options.vcoType||defaultOptions.vcoType||"sine";options=options.gain||
defaultOptions.gain||.4;var vco=ctx.createOscillator();vco.type=vcoType;vco.frequency.value=freq;freq=ctx.createGain();freq.gain.value=options;vco.connect(freq);freq.connect(note);vco.start(time);0<duration&&vco.stop(time+duration);return vco}}}var parser=require("module$node_modules$note_parser$dist$note_parser");Soundfont.prototype.onready=function(callback){console.warn("deprecated API");console.log("Please use Promise.all(Soundfont.instrument(), Soundfont.instrument()).then() instead of new Soundfont().onready()");
Promise.all(this.promises).then(callback)};Soundfont.prototype.instrument=function(name,options){console.warn("new Soundfont().instrument() is deprecated.");console.log("Please use Soundfont.instrument() instead.");var ctx=this.ctx;name=name||"default";if(name in this.instruments)return this.instruments[name];var inst={name:name,play:oscillatorPlayer(ctx,options)};this.instruments[name]=inst;if("default"!==name){var promise=Soundfont.instrument(ctx,name,options).then(function(instrument){inst.play=
instrument.play;return inst});this.promises.push(promise);inst.onready=function(cb){console.warn("onready is deprecated. Use Soundfont.instrument().then()");promise.then(cb)}}else inst.onready=function(cb){console.warn("onready is deprecated. Use Soundfont.instrument().then()");cb()};return inst};Soundfont.loadBuffers=function(ac,name,options){console.warn("Soundfont.loadBuffers is deprecate.");console.log("Use Soundfont.instrument(..) and get buffers properties from the result.");return Soundfont.instrument(ac,
name,options).then(function(inst){return inst.buffers})};Soundfont.noteToMidi=parser.midi;module.exports=Soundfont}
//# sourceMappingURL=module$node_modules$soundfont_player$lib$legacy.js.map
