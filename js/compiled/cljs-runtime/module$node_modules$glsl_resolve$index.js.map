{
"version":3,
"file":"module$node_modules$glsl_resolve$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,sCAAf,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsCnGC,QAASA,SAAQ,CAACC,IAAD,CAAO,CACtB,MAAOC,MAAA,CAAMD,IAAN,CAAY,CACfE,QAASC,IADM,CAEfC,WAAYC,IAFG,CAGAC,aAHA,CAAZ,CADe,CAUxBA,QAASA,cAAa,CAACC,GAAD,CAAMC,IAAN,CAAY,CAChCD,GAAA,CAAIE,IAAJ,CAAWF,GAAX,CAAeG,OAAf,EACmC,KADnC,GACEC,IAAA,CAAKC,OAAL,CAAaL,GAAb,CAAiBE,IAAjB,EAAyB,EAAzB,CADF,EAEEF,GAFF,CAEME,IAFN,EAGK,YAEL,OAAOF,IANyB,CA/ClC,IAAIM,SAAWjB,OAAA,CAAQ,mCAAR,CAAf,CACIK,MAAWL,OAAA,CAAQ,qCAAR,CADf,CAEIe,KAAWf,OAAA,CAAQ,2CAAR,CAFf,CAIIO,KAAO,EAJX,CAKIE,KAAO,+EAAA,CAAA,KAAA,CAAA,GAAA,CAgBXR;MAAA,CAAOC,OAAP,CAGAgB,QAAgB,CAACC,MAAD,CAASf,IAAT,CAAegB,IAAf,CAAqB,CACnC,MAAOH,SAAA,CAASE,MAAT,CACHhB,QAAA,CAASC,IAAT,EAAiB,EAAjB,CADG,CAEHgB,IAFG,CAD4B,CAFrCnB,OAAA,CAAOC,OAAP,CAAemB,IAAf,CASAC,QAAoB,CAACH,MAAD,CAASf,IAAT,CAAe,CACjC,MAAOa,SAAA,CAASI,IAAT,CAAcF,MAAd,CACHhB,QAAA,CAASC,IAAT,EAAiB,EAAjB,CADG,CAD0B,CAhCgE;",
"sources":["node_modules/glsl-resolve/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$glsl_resolve$index\"] = function(global,require,module,exports) {\nvar resolver = require('resolve')\nvar xtend    = require('xtend')\nvar path     = require('path')\n\nvar core = {}\nvar exts = [\n    '.glsl'\n  , '.vert'\n  , '.frag'\n  , '.geom'\n  , '.vs'\n  , '.fs'\n  , '.gs'\n  , '.vsh'\n  , '.fsh'\n  , '.gsh'\n  , '.vshader'\n  , '.fshader'\n  , '.gshader'\n]\n\nmodule.exports      = resolve\nmodule.exports.sync = resolveSync\n\nfunction resolve(target, opts, next) {\n  return resolver(target\n    , glslOpts(opts || {})\n    , next\n  )\n}\n\nfunction resolveSync(target, opts) {\n  return resolver.sync(target\n    , glslOpts(opts || {})\n  )\n}\n\nfunction glslOpts(opts) {\n  return xtend(opts, {\n      modules: core\n    , extensions: exts\n    , packageFilter: packageFilter\n  })\n}\n\n// find the \"glslify\", \"main\", or assume main == \"index.glsl\"\n// if main is a .js file then ignore it.\nfunction packageFilter(pkg, root) {\n  pkg.main = pkg.glslify || (\n    path.extname(pkg.main || '') !== '.js' &&\n    pkg.main\n  ) || 'index.glsl'\n\n  return pkg\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","glslOpts","opts","xtend","modules","core","extensions","exts","packageFilter","pkg","root","main","glslify","path","extname","resolver","resolve","target","next","sync","resolveSync"]
}
