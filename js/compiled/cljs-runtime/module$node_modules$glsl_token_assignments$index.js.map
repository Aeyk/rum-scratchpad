{
"version":3,
"file":"module$node_modules$glsl_token_assignments$index.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/glsl-token-assignments/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$glsl_token_assignments$index\"] = function(global,require,module,exports) {\nvar assignments = require('./assignments')\nvar ignoredKeywords = require('./ignored')\n\nmodule.exports = assigns\n\n// Here be dragons. Apologies in advance for the hairy code!\nfunction assigns(tokens) {\n  var idx = 0\n\n  // Determine if a value has been assigned, e.g.\n  // x = 1.0;\n  // float x = 1.0;\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var type  = token.type\n\n    token.assignment = false\n    token.declaration = false\n    if (type !== 'ident' && type !== 'builtin') continue\n    idx = i + 1\n\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'operator') continue\n    if (!assignments[tokens[idx].data]) continue\n    token.assignment = true\n  }\n\n  // Determine if a value is being defined, e.g.\n  // float x;\n  // float x, y, z;\n  // float x, y = vec3(sin(1.0 + 3.0)), z;\n  // float[3][2] x, y = vec3(sin(1.0 + 3.0)), z;\n  // float[][2] x, y = vec3(sin(1.0 + 3.0)), z;\n  // float x[2], y = vec3(sin(1.0 + 3.0)), z[4];\n  // float x(float y, float z) {};\n  // float x(float y[2], Thing[3] z) {};\n  // Thing x[2], y = Another(sin(1.0 + 3.0)), z[4];\n  for (var i = 0; i < tokens.length; i++) {\n    var datatype = tokens[i]\n    var type     = datatype.type\n    var data     = datatype.data\n\n    datatype.declaration = false\n\n    if (type === 'keyword') {\n      if (ignoredKeywords[data]) continue\n    } else\n    if (type !== 'ident') continue\n\n    idx = i + 1\n\n    skipArrayDimensions()\n    if (tokens[idx].type !== 'ident') continue\n    tokens[idx++].declaration = true\n    skipArrayDimensions()\n\n    // Function arguments/parameters\n    if (tokens[idx].data === '(') {\n      idx++\n\n      skipWhitespace(+1)\n      while (tokens[idx] && tokens[idx].data !== ')') {\n        if (tokens[idx].type !== 'keyword' && tokens[idx].type !== 'ident') break\n        idx++\n        skipWhitespace(+1)\n        if (tokens[idx].type !== 'ident') continue\n        tokens[idx++].declaration = true\n        skipWhitespace(+1)\n        skipArrayDimensions()\n        skipWhitespace(+1)\n        if (tokens[idx].data !== ',') continue\n        idx++\n        skipWhitespace(+1)\n      }\n\n      i = idx\n      continue\n    }\n\n    // Declaration Lists\n    while (tokens[idx] && tokens[idx].data !== ';') {\n      if (tokens[idx].data === ',') {\n        idx++\n        skipWhitespace(+1)\n        if (tokens[idx].declaration = tokens[idx].type === 'ident') idx++\n      } else {\n        skipWhitespace(+1)\n        skipParens()\n        skipWhitespace(+1)\n        idx++\n      }\n    }\n\n    i = idx\n  }\n\n  // Handle struct declarations:\n  // struct declaration {\n  //   float x, y, z;\n  //   Other w;\n  // } declaration;\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.type !== 'keyword') continue\n    if (token.data !== 'struct') continue\n    idx = i + 1\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'ident') continue\n\n    idx++\n    skipWhitespace(+1)\n    if (tokens[idx++].data !== '{') continue\n    skipWhitespace(+1)\n\n    while (tokens[idx].type === 'ident' || tokens[idx].type === 'keyword') {\n      do {\n        idx++\n        skipWhitespace(+1)\n        tokens[idx].structMember = true\n        tokens[idx].declaration = false\n        idx++\n        skipArrayDimensions()\n      } while (tokens[idx].data === ',')\n\n      if (tokens[idx].data === ';') idx++\n      skipWhitespace()\n    }\n\n    idx++\n    skipWhitespace(+1)\n    if (tokens[idx].type !== 'ident') continue\n    tokens[idx].declaration = true\n    skipWhitespace(+1)\n\n    while (tokens[++idx].data === ',') {\n      skipWhitespace(+1)\n      idx++\n      skipWhitespace(+1)\n      if (tokens[idx].type === 'ident') tokens[idx].declaration = true\n      skipWhitespace(+1)\n    }\n  }\n\n  return tokens\n\n  function skipWhitespace(n) {\n    while (tokens[idx] && tokens[idx].type === 'whitespace') idx++\n  }\n\n  function skipArrayDimensions() {\n    while (tokens[idx] && (\n         tokens[idx].type === 'integer'\n      || tokens[idx].data === '['\n      || tokens[idx].data === ']'\n      || tokens[idx].type === 'whitespace'\n    )) idx++\n  }\n\n  function skipParens() {\n    if (!tokens[idx]) return\n    if (tokens[idx].data !== '(') return\n    var depth = 0\n    var a = idx\n    do {\n      if (tokens[idx].data === ';') break\n      if (tokens[idx].data === '(') depth++\n      if (tokens[idx].data === ')') depth--\n    } while(depth && tokens[++idx])\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","assignments","ignoredKeywords","assigns","tokens","skipWhitespace","n","idx","type","skipArrayDimensions","data","skipParens","depth","i","length","token","assignment","declaration","datatype","structMember"]
}
