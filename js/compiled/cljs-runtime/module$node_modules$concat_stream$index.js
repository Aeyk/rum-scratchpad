shadow$provide.module$node_modules$concat_stream$index=function(global,require,module,exports){function ConcatStream(opts,cb){if(!(this instanceof ConcatStream))return new ConcatStream(opts,cb);"function"===typeof opts&&(cb=opts,opts={});opts||(opts={});opts=opts.encoding;var shouldInferEncoding=!1;if(opts){if(opts=String(opts).toLowerCase(),"u8"===opts||"uint8"===opts)opts="uint8array"}else shouldInferEncoding=!0;Writable.call(this,{objectMode:!0});this.encoding=opts;this.shouldInferEncoding=shouldInferEncoding;
if(cb)this.on("finish",function(){cb(this.getBody())});this.body=[]}function isBufferish(p){return"string"===typeof p||/Array\]$/.test(Object.prototype.toString.call(p))||p&&"function"===typeof p.subarray}var Buffer=require("module$node_modules$buffer$index").Buffer,Writable=require("module$node_modules$readable_stream$readable_browser").Writable;global=require("module$node_modules$inherits$inherits_browser");var bufferFrom=require("module$node_modules$buffer_from$index"),U8="undefined"===typeof Uint8Array?
require("module$node_modules$typedarray$index").Uint8Array:Uint8Array;module.exports=ConcatStream;global(ConcatStream,Writable);ConcatStream.prototype._write=function(chunk,enc,next){this.body.push(chunk);next()};ConcatStream.prototype.inferEncoding=function(buff){buff=void 0===buff?this.body[0]:buff;return Buffer.isBuffer(buff)?"buffer":"undefined"!==typeof Uint8Array&&buff instanceof Uint8Array?"uint8array":Array.isArray(buff)?"array":"string"===typeof buff?"string":"[object Object]"===Object.prototype.toString.call(buff)?
"object":"buffer"};ConcatStream.prototype.getBody=function(){if(!this.encoding&&0===this.body.length)return[];this.shouldInferEncoding&&(this.encoding=this.inferEncoding());if("array"===this.encoding){for(var parts=this.body,res=[],i=0;i<parts.length;i++)res.push.apply(res,parts[i]);return res}if("string"===this.encoding){parts=this.body;res=[];for(i=0;i<parts.length;i++){var p=parts[i];"string"===typeof p?res.push(p):Buffer.isBuffer(p)?res.push(p):isBufferish(p)?res.push(bufferFrom(p)):res.push(bufferFrom(String(p)))}Buffer.isBuffer(parts[0])?
(res=Buffer.concat(res),res=res.toString("utf8")):res=res.join("");return res}if("buffer"===this.encoding){parts=this.body;res=[];for(i=0;i<parts.length;i++)p=parts[i],Buffer.isBuffer(p)?res.push(p):isBufferish(p)?res.push(bufferFrom(p)):res.push(bufferFrom(String(p)));return Buffer.concat(res)}if("uint8array"===this.encoding){parts=this.body;for(res=i=0;res<parts.length;res++)"string"===typeof parts[res]&&(parts[res]=bufferFrom(parts[res])),i+=parts[res].length;i=new U8(i);for(p=res=0;res<parts.length;res++)for(var part=
parts[res],j=0;j<part.length;j++)i[p++]=part[j];return i}return this.body}}
//# sourceMappingURL=module$node_modules$concat_stream$index.js.map
