shadow$provide.module$node_modules$glslify_deps$sync=function(global,require,module,exports$jscomp$0){function Depper(opts){if(!(this instanceof Depper))return new Depper(opts);Emitter.call(this);opts=(opts="string"===typeof opts?{cwd:opts}:opts)||{};this._deps=[];this._cwd=opts.cwd||process.cwd();this._cache={};this._i=0;this._transforms=[];this._trCache={};this._fileCache=opts.files||{};this._globalTransforms=[];this._readFile=cacheWrap(opts.readFileSync||defaultRead,this._fileCache);this.resolve=
opts.resolve||glslResolve;if("string"!==typeof this._cwd)throw Error("glslify-deps: cwd must be a string path");}function defaultRead(src){return fs.readFileSync(src,"utf8")}function cacheWrap(read,cache){cache=Object.keys(cache).reduce(function(newCache,file){newCache[path.resolve(file)]=cache[file];return newCache},{});return function(filename){cache[filename]||(cache[filename]=read(filename));return cache[filename]}}var process=require("module$node_modules$process$browser"),tokenize=require("module$node_modules$glsl_tokenizer$string"),
findup=require("module$node_modules$$choojs$findup$index").sync,fs=require("module$node_modules$graceful_fs$graceful_fs");require("module$node_modules$map_limit$index");global=require("module$node_modules$inherits$inherits_browser");var Emitter=require("module$node_modules$events$events"),path=require("module$node_modules$path_browserify$index"),glslResolve=require("module$node_modules$glsl_resolve$index").sync,nodeResolve=require("module$node_modules$resolve$index").sync,inlineName="__INLINE__"+
Math.random(),inlineSource="";module.exports=Depper;global(Depper,Emitter);Depper.prototype.inline=function(source,basedir){basedir=path.resolve(basedir||process.cwd(),inlineName);inlineSource=source;return this.add(basedir)};Depper.prototype.transform=function(transform,opts){var name="string"===typeof transform?transform:null,list=opts&&opts.global?this._globalTransforms:this._transforms;if(opts&&opts.post)return this;transform=this.resolveTransform(transform);list.push({tr:transform,opts,name});
return this};Depper.prototype.add=function(filename){var basedir=path.dirname(filename=path.resolve(filename)),cache=this._cache,self=this,exports=[],imports=[],dep={id:this._i++,deps:{},file:filename,source:null,entry:1===this._i};this._deps.push(dep);var src=this.readFile(filename),trs=self.getTransformsForFile(filename);self.emit("file",filename);src=self.applyTransforms(filename,src,trs);dep.source=src;(function(){for(var tokens=tokenize(dep.source),i=0;i<tokens.length;i++){var token=tokens[i];
if("preprocessor"===token.type){var data=token.data;/#pragma glslify:/.test(data)&&(token=/#pragma glslify:\s*export\(([^\)]+)\)/.exec(data),data=/#pragma glslify:\s*([^=\s]+)\s*=\s*require\(([^\)]+)\)/.exec(data),token&&exports.push(token[1]),data&&imports.push(data[2]))}}})();(function(resolved$jscomp$0){imports.forEach(function(imp){imp=imp.split(/\s*,\s*/).shift();imp=imp.trim();imp=imp.replace(/^'|'$/g,"");imp=imp.replace(/^"|"$/g,"");var resolved=self.resolve(imp,{basedir});cache[resolved]&&
(dep.deps[imp]=cache[resolved].id);var i=self._i;cache[resolved]=self.add(resolved)[i];dep.deps[imp]=cache[resolved].id})})();return self._deps};Depper.prototype.readFile=function(filename){return path.basename(filename)!==inlineName?this._readFile(filename):inlineSource};Depper.prototype.getTransformsForFile=function(filename){var self=this,entry=this._deps[0];if(!entry)throw Error("getTransformsForFile may only be called after adding your entry file");entry=path.dirname(path.resolve(entry.file));
filename=path.dirname(path.resolve(filename));entry=-1!==path.relative(entry,filename).split(path.sep).indexOf("node_modules")?[]:this._transforms;var trCache=this._trCache;if(trCache[filename])return trCache[filename];try{var found=findup(filename,"package.json")}catch(err){if("not found"===err.message)return trCache[filename]=entry.concat([]).concat(self._globalTransforms);throw err;}found=path.join(found,"package.json");found=JSON.parse(self.readFile(found));found=found.glslify&&found.glslify.transform||
[];found=found.map(function(key){var transform=Array.isArray(key)?key:[key,{}];key=transform[0];if(transform=transform[1])delete transform.global,delete transform.post;return{tr:key,opts:transform,name:key}}).map(function(tr){tr.tr=self.resolveTransform(tr.tr);return tr});return trCache[filename]=entry.concat(found).concat(self._globalTransforms)};Depper.prototype.resolveTransform=function(transform){if("string"===typeof transform){transform=nodeResolve(transform,{basedir:this._cwd});var m=require(transform);
if(!m||"function"!==typeof m.sync)throw Error("transform "+transform+" does not provide a synchronous interface");transform=m.sync}return transform};Depper.prototype.applyTransforms=function(filename,src,transforms){transforms.forEach(function(tr){src=tr.tr(filename,src+"",tr.opts)});return src}}
//# sourceMappingURL=module$node_modules$glslify_deps$sync.js.map
