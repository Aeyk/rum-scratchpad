{
"version":3,
"file":"module$node_modules$resolve$lib$core.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,oCAAf,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0BjGC,QAASA,aAAY,CAACC,KAAD,CAAQ,CACrBC,KAAAA,CAAaD,KAAA,CAAME,KAAN,CAAY,QAAZ,CACjB,IAA0B,CAA1B,GAAID,KAAJ,CAAeE,MAAf,CAA+B,MAAO,CAAA,CACtC,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,KAApB,CAA+BE,MAA/B,CAAuC,EAAEC,CAAzC,CAA4C,CAzBV,CAAA,CAAA,CAClC,IAAIC,MAyBuBJ,KAAAK,CAAWF,CAAXE,CAzBf,CAAUJ,KAAV,CAAgB,GAAhB,CACRK,KAAAA,yBAAoB,CAAf,CAAAF,KAAA,CAAMF,MAAN,CAAmBE,KAAA,CAAM,CAAN,CAAnB,CAA8B,MACnCG,MAAAA,CAAe,CAAgB,CAAf,CAAAH,KAAA,CAAMF,MAAN,CAAmBE,KAAA,CAAM,CAAN,CAAnB,CAA8BA,KAAA,CAAM,CAAN,CAA/B,EAAyCH,KAAzC,CAA+C,GAA/C,CAEnB,KAAK,IAAIE,WAAI,CAAb,CAAoB,CAApB,CAAgBA,UAAhB,CAAuB,EAAEA,UAAzB,CAA4B,CACxB,IAAIK,IAAMC,QAAA,CAASC,OAAA,CAAQP,UAAR,CAAT,EAAuB,CAAvB,CAA0B,EAA1B,CAAV,CACIQ,IAAMF,QAAA,CAASF,KAAA,CAAaJ,UAAb,CAAT,EAA4B,CAA5B,CAA+B,EAA/B,CACV,IAAIK,GAAJ,GAAYG,GAAZ,CAAA,CAGA,wBAAA;AAAW,MAAX,GAAIL,wBAAJ,CACWE,GADX,CACiBG,GADjB,CAEkB,UAAX,GAAIL,wBAAJ,CACIE,GADJ,EACWG,GADX,CAGI,CAAA,CALX,OAAA,CAHA,CAHwB,CAc5B,wBAAA,CAAc,UAAd,GAAOL,wBAnB2B,CA0B9B,GAAI,CAAC,wBAAL,CAAyC,MAAO,CAAA,CADR,CAG5C,MAAO,CAAA,CANkB,CAS7BM,QAASA,gBAAe,CAACC,cAAD,CAAiB,CACrC,GAA8B,SAA9B,GAAI,MAAOA,eAAX,CAA2C,MAAOA,eAClD,IAAIA,cAAJ,EAAgD,QAAhD,GAAsB,MAAOA,eAA7B,CAA0D,CACtD,IAAK,IAAIV,EAAI,CAAb,CAAgBA,CAAhB,CAAoBU,cAApB,CAAmCX,MAAnC,CAA2C,EAAEC,CAA7C,CACI,GAAIL,YAAA,CAAae,cAAA,CAAeV,CAAf,CAAb,CAAJ,CAAuC,MAAO,CAAA,CAElD,OAAO,CAAA,CAJ+C,CAM1D,MAAOL,aAAA,CAAae,cAAb,CAR8B,CAlCrCC,MAAAA,CAAUnB,OAAA,CAAQ,qCAAR,CACd;IAAIe,QAAWI,MAAXJ,CAAmBK,QAAnBL,EAA+BI,MAA/BJ,CAAuCK,QAAvCL,CAAgDM,IAAhDN,EAAwDI,MAAA,CAAQC,QAAR,CAAiBC,IAAjB,CAAsBf,KAAtB,CAA4B,GAA5B,CAAxDS,EAA6F,EA4C7FO,QAAAA,CAAOtB,OAAA,CAAQ,2CAAR,CAEPuB,OAAAA,CAAO,EACX,KAAKC,IAAIA,GAAT,GAAgBF,QAAhB,CACQG,MAAA,CAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,OAArC,CAA2CE,GAA3C,CAAJ,GACID,MAAA,CAAKC,GAAL,CADJ,CACgBP,eAAA,CAAgBK,OAAA,CAAKE,GAAL,CAAhB,CADhB,CAIJvB,OAAA,CAAOC,OAAP,CAAiBqB,MAtDgF;",
"sources":["node_modules/resolve/lib/core.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$resolve$lib$core\"] = function(global,require,module,exports) {\nvar process = require('process');\nvar current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = parseInt(current[i] || 0, 10);\n        var ver = parseInt(versionParts[i] || 0, 10);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        } else {\n            return false;\n        }\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n\n};"],
"names":["shadow$provide","global","require","module","exports","matchesRange","range","specifiers","split","length","i","parts","specifier","op","versionParts","cur","parseInt","current","ver","versionIncluded","specifierValue","process","versions","node","data","core","mod","Object","prototype","hasOwnProperty","call"]
}
