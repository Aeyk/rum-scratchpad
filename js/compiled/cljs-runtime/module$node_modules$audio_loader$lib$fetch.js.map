{
"version":3,
"file":"module$node_modules$audio_loader$lib$fetch.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,0CAAf,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYvGD,MAAA,CAAOC,OAAP,CAAiBC,QAAS,CAACC,GAAD,CAAMC,IAAN,CAAY,CACpC,MAAO,KAAIC,OAAJ,CAAY,QAAS,CAACC,IAAD,CAAOC,MAAP,CAAe,CACzC,IAAIC,IAAM,IAAIC,cACVL,KAAJ,GAAUI,GAAV,CAAcE,YAAd,CAA6BN,IAA7B,CAEAI,IAAA,CAAIG,IAAJ,CAAS,KAAT,CAAgBR,GAAhB,CACAK,IAAA,CAAII,MAAJ,CAAaC,QAAS,EAAG,CACR,GAAf,GAAAL,GAAA,CAAIM,MAAJ,CAAqBR,IAAA,CAAKE,GAAL,CAASO,QAAT,CAArB,CAA0CR,MAAA,CAAOS,KAAA,CAAMR,GAAN,CAAUS,UAAV,CAAP,CADnB,CAGzBT,IAAA,CAAIU,OAAJ,CAAcC,QAAS,EAAG,CAAEZ,MAAA,CAAOS,KAAA,CAAM,eAAN,CAAP,CAAF,CAC1BR,IAAA,CAAIY,IAAJ,EATyC,CAApC,CAD6B,CAZiE;",
"sources":["node_modules/audio-loader/lib/fetch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$audio_loader$lib$fetch\"] = function(global,require,module,exports) {\n/* global XMLHttpRequest */\n'use strict'\n\n/**\n * Given a url and a return type, returns a promise to the content of the url\n * Basically it wraps a XMLHttpRequest into a Promise\n *\n * @param {String} url\n * @param {String} type - can be 'text' or 'arraybuffer'\n * @return {Promise}\n */\nmodule.exports = function (url, type) {\n  return new Promise(function (done, reject) {\n    var req = new XMLHttpRequest()\n    if (type) req.responseType = type\n\n    req.open('GET', url)\n    req.onload = function () {\n      req.status === 200 ? done(req.response) : reject(Error(req.statusText))\n    }\n    req.onerror = function () { reject(Error('Network Error')) }\n    req.send()\n  })\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","url","type","Promise","done","reject","req","XMLHttpRequest","responseType","open","onload","req.onload","status","response","Error","statusText","onerror","req.onerror","send"]
}
