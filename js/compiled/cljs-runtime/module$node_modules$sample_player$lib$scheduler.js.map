{
"version":3,
"file":"module$node_modules$sample_player$lib$scheduler.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,+CAAf,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5G,IAAIC,MAAQC,KAARD,CAAcE,OAAlB,CAEIC,KAAO,EAEXL,OAAA,CAAOC,OAAP,CAAiBK,QAAS,CAACC,MAAD,CAAS,CA8BjCA,MAAA,CAAOC,QAAP,CAAkBC,QAAS,CAACC,IAAD,CAAOC,MAAP,CAAe,CACxC,IAAIC,IAAML,MAANK,CAAaC,OAAbD,CAAqBE,WAAzB,CACIC,KAAOL,IAAA,CAAOE,GAAP,CAAaA,GAAb,CAAmBF,IAC9BH,OAAA,CAAOS,IAAP,CAAY,UAAZ,CAAwBD,IAAxB,CAA8BJ,MAA9B,CAHwC,KAIpCM,CAJoC,CAIjCC,CAJiC,CAI9BC,IAJ8B,CAIxBC,IAChB,OAAOT,OAAA,CAAOU,GAAP,CAAW,QAAS,CAACC,KAAD,CAAQ,CACjC,GAAKA,KAAL,CACSpB,KAAA,CAAMoB,KAAN,CAAJ,EACHL,CAAc,CAAVK,KAAA,CAAM,CAAN,CAAU,CAAAJ,CAAA,CAAII,KAAA,CAAM,CAAN,CADf,GAGHL,CAAgB,CAAZK,KAAY,CAANZ,IAAM,CAAAQ,CAAA,CAAII,KAHjB,CADL,KAAY,OAAO,KAOTJ,EAAV,EA9C8C,QA8C9C,GA9CiC,MA8CvBA,EAAV,EACEC,IACA,CADOD,CACP,CADSK,IACT,EADiBL,CACjB,CADmBM,GACnB,EAD0BN,CAC1B,CAD4BC,IAC5B,EADoCD,CACpC,CADsCO,IACtC,EAD8C,IAC9C;AAAAL,IAAA,CAAOF,CAFT,GAIEC,IACA,CADOD,CACP,CAAAE,IAAA,CAAOf,IALT,CAQA,OAAOE,OAAA,CAAOmB,KAAP,CAAaP,IAAb,CAAmBJ,IAAnB,EAA2BE,CAA3B,EAAgC,CAAhC,EAAoCG,IAApC,CAhB0B,CAA5B,CALiC,CAwB1C,OAAOb,OAtD0B,CAPyE;",
"sources":["node_modules/sample-player/lib/scheduler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$sample_player$lib$scheduler\"] = function(global,require,module,exports) {\n'use strict'\n\nvar isArr = Array.isArray\nvar isObj = function (o) { return o && typeof o === 'object' }\nvar OPTS = {}\n\nmodule.exports = function (player) {\n  /**\n   * Schedule a list of events to be played at specific time.\n   *\n   * It supports three formats of events for the events list:\n   *\n   * - An array with [time, note]\n   * - An array with [time, object]\n   * - An object with { time: ?, [name|note|midi|key]: ? }\n   *\n   * @param {Float} time - an absolute time to start (or AudioContext's\n   * currentTime if provided number is 0)\n   * @param {Array} events - the events list.\n   * @return {Array} an array of ids\n   *\n   * @example\n   * // Event format: [time, note]\n   * var piano = player(ac, ...).connect(ac.destination)\n   * piano.schedule(0, [ [0, 'C2'], [0.5, 'C3'], [1, 'C4'] ])\n   *\n   * @example\n   * // Event format: an object { time: ?, name: ? }\n   * var drums = player(ac, ...).connect(ac.destination)\n   * drums.schedule(0, [\n   *   { name: 'kick', time: 0 },\n   *   { name: 'snare', time: 0.5 },\n   *   { name: 'kick', time: 1 },\n   *   { name: 'snare', time: 1.5 }\n   * ])\n   */\n  player.schedule = function (time, events) {\n    var now = player.context.currentTime\n    var when = time < now ? now : time\n    player.emit('schedule', when, events)\n    var t, o, note, opts\n    return events.map(function (event) {\n      if (!event) return null\n      else if (isArr(event)) {\n        t = event[0]; o = event[1]\n      } else {\n        t = event.time; o = event\n      }\n\n      if (isObj(o)) {\n        note = o.name || o.key || o.note || o.midi || null\n        opts = o\n      } else {\n        note = o\n        opts = OPTS\n      }\n\n      return player.start(note, when + (t || 0), opts)\n    })\n  }\n  return player\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","isArr","Array","isArray","OPTS","module.exports","player","schedule","player.schedule","time","events","now","context","currentTime","when","emit","t","o","note","opts","map","event","name","key","midi","start"]
}
