{
"version":3,
"file":"module$node_modules$source_map$lib$array_set.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/source-map/lib/array-set.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$source_map$lib$array_set\"] = function(global,require,module,exports) {\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n\n};"],
"names":["shadow$provide","global","require","module","exports","ArraySet","_array","_set","hasNativeMap","Map","Object","create","util","has","prototype","hasOwnProperty","fromArray","ArraySet.fromArray","aArray","aAllowDuplicates","set","i","len","length","add","size","ArraySet.prototype.size","getOwnPropertyNames","ArraySet.prototype.add","aStr","sStr","toSetString","isDuplicate","call","idx","push","ArraySet.prototype.has","indexOf","ArraySet.prototype.indexOf","get","Error","at","ArraySet.prototype.at","aIdx","toArray","ArraySet.prototype.toArray","slice"]
}
