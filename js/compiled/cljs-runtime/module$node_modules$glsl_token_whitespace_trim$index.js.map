{
"version":3,
"file":"module$node_modules$glsl_token_whitespace_trim$index.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/glsl-token-whitespace-trim/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$glsl_token_whitespace_trim$index\"] = function(global,require,module,exports) {\nmodule.exports = trim\n\nfunction trim (tokens, everything) {\n  return trim[everything ? 'all' : 'newlines'](collapse(tokens))\n}\n\nfunction collapse (tokens) {\n  for (var i = 1; i < tokens.length; i++) {\n    var curr = tokens[i]\n    if (curr.type !== 'whitespace') continue\n    var prev = tokens[i - 1]\n    if (prev.type !== 'whitespace') continue\n    tokens.splice(--i, 1)\n    curr.data = prev.data + curr.data\n  }\n\n  return tokens\n}\n\nvar newlines = /(?:\\n|\\r\\n|\\r){2,}/g\n\ntrim.newlines = function (tokens) {\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.type !== 'whitespace') continue\n    token.data = token.data.replace(newlines, '\\n\\n')\n  }\n\n  return tokens\n}\n\nvar all = /\\s+/g\n\ntrim.all = function (tokens) {\n  var l = tokens.length\n\n  for (var i = 0; i < l; i++) {\n    var token = tokens[i]\n    if (token.type !== 'whitespace') continue\n    var next = tokens[i + 1]\n    var prev = tokens[i - 1]\n\n    if (next && next.type === 'preprocessor' || prev && prev.type === 'preprocessor') {\n      token.data = token.data.replace(all, '\\n')\n    } else {\n      token.data = token.data.replace(all, ' ')\n\n      switch (next && next.data) {\n        case '(': case ';': case ')':\n        case '{': case '=': case '}': case ',':\n          token.data = token.data.replace(all, '')\n      }\n\n      switch (prev && prev.data) {\n        case '(': case ';': case ')':\n        case '{': case '=': case '}': case ',':\n          token.data = token.data.replace(all, '')\n      }\n    }\n  }\n\n  return tokens\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","trim","tokens","everything","collapse","i","length","curr","type","prev","splice","data","newlines","trim.newlines","token","replace","all","trim.all","l","next"]
}
