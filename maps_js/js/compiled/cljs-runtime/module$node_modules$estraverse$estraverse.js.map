{
"version":3,
"file":"module$node_modules$estraverse$estraverse.js",
"lineCount":27,
"mappings":"AAAAA,cAAA,CAAe,yCAAf,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,gBAAvB,CAAgC,CA4BrGC,SAASA,MAAK,CAACD,OAAD,CAAU,CAUrBE,QAASA,SAAQ,CAACC,GAAD,CAAM,CAAA,IACfC,IAAM,EADS,CACLC,GACd,KAAKA,GAAL,GAAYF,IAAZ,CACI,GAAIA,GAAA,CAAIG,cAAJ,CAAmBD,GAAnB,CAAJ,CAA6B,CACzB,IAAAE,IAAMJ,GAAA,CAAIE,GAAJ,CAEFD,IAAA,CAAIC,GAAJ,CAAA,CADe,QAAnB,GAAI,MAAOE,IAAX,EAAuC,IAAvC,GAA+BA,GAA/B,CACeL,QAAA,CAASK,GAAT,CADf,CAGeA,GALU,CASjC,MAAOH,IAZY,CAkBvBI,QAASA,WAAU,CAACC,KAAD,CAAQC,IAAR,CAAc,CAAA,IACdC,CAEf,KAAAC,IAAMH,KAANG,CAAYC,MAGZ,KAFAF,CAEA,CAFI,CAEJ,CAAOC,GAAP,CAAA,CAAY,CACR,IAAAE,KAAOF,GAAPE,GAAe,CACf,KAAAC,QAAUJ,CAAVI,CAAcD,IACVJ,KAAA,CAAKD,KAAA,CAAMM,OAAN,CAAL,CAAJ,CACIH,GADJ,CACUE,IADV,EAGIH,CACA,CADII,OACJ,CADc,CACd,CAAAH,GAAA,EAAOE,IAAP,CAAc,CAJlB,CAHQ,CAUZ,MAAOH,EAhBsB,CAoLjCK,QAASA,UAAS,CAACC,MAAD;AAASZ,GAAT,CAAc,CAC5B,IAAA,CAAKY,MAAL,CAAcA,MACd,KAAA,CAAKZ,GAAL,CAAWA,GAFiB,CAmBhCa,QAASA,QAAO,CAACC,IAAD,CAAOC,IAAP,CAAaC,IAAb,CAAmBC,GAAnB,CAAwB,CACpC,IAAA,CAAKH,IAAL,CAAYA,IACZ,KAAA,CAAKC,IAAL,CAAYA,IACZ,KAAA,CAAKC,IAAL,CAAYA,IACZ,KAAA,CAAKC,GAAL,CAAWA,GAJyB,CAOxCC,QAASA,WAAU,EAAG,EAuHtBC,QAASA,OAAM,CAACL,IAAD,CAAO,CAClB,MAAY,KAAZ,EAAIA,IAAJ,CACW,CAAA,CADX,CAGuB,QAHvB,GAGO,MAAOA,KAHd,EAGwD,QAHxD,GAGmC,MAAOA,KAAP,CAAYM,IAJ7B,CAuQtBC,QAASA,SAAQ,CAACC,IAAD,CAAOC,OAAP,CAAgB,CAE7B,MAAO,CADUC,IAAIN,UACd,EAAWG,QAAX,CAAoBC,IAApB,CAA0BC,OAA1B,CAFsB,CAUjCE,QAASA,mBAAkB,CAACC,OAAD,CAAUC,MAAV,CAAkB,CAGzC,IAAAC,OAASzB,UAAA,CAAWwB,MAAX,CAAmBE,QAAe,CAACC,KAAD,CAAQ,CAC/C,MAAOA,MAAA,CAAMC,KAAN,CAAY,CAAZ,CAAP,CAAwBL,OAAA,CAAQK,KAAR,CAAc,CAAd,CADuB,CAA1C,CAITL,QAAA,CAAQM,aAAR,CAAwB,CAACN,OAAA,CAAQK,KAAR,CAAc,CAAd,CAAD,CAAmBL,OAAA,CAAQK,KAAR,CAAc,CAAd,CAAnB,CAEpBH;MAAJ,GAAeD,MAAf,CAAsBnB,MAAtB,GACIkB,OAAA,CAAQM,aAAR,CAAsB,CAAtB,CADJ,CAC+BL,MAAA,CAAOC,MAAP,CAAA,CAAeG,KAAf,CAAqB,CAArB,CAD/B,CAIA,GAAAH,MACc,EAAd,EAAIA,MAAJ,GACIF,OAAA,CAAQM,aAAR,CAAsB,CAAtB,CADJ,CAC+BL,MAAA,CAAOC,MAAP,CAAA,CAAeG,KAAf,CAAqB,CAArB,CAD/B,CAIA,OAAOL,QAlBkC,CAnkB7C,IAAAO,OAAS,CACLC,qBAAsB,sBADjB,CAELC,kBAAmB,mBAFd,CAGLC,gBAAiB,iBAHZ,CAILC,aAAc,cAJT,CAKLC,wBAAyB,yBALpB,CAMLC,gBAAiB,iBANZ,CAOLC,eAAgB,gBAPX,CAQLC,iBAAkB,kBARb,CASLC,eAAgB,gBATX;AAULC,eAAgB,gBAVX,CAWLC,YAAa,aAXR,CAYLC,UAAW,WAZN,CAaLC,iBAAkB,kBAbb,CAcLC,gBAAiB,iBAdZ,CAeLC,mBAAoB,oBAff,CAgBLC,wBAAyB,yBAhBpB,CAiBLC,sBAAuB,uBAjBlB,CAkBLC,kBAAmB,mBAlBd,CAmBLC,kBAAmB,mBAnBd,CAoBLC,mBAAoB,oBApBf,CAqBLC,iBAAkB,kBArBb,CAsBLC,eAAgB,gBAtBX,CAuBLC,qBAAsB,sBAvBjB;AAwBLC,yBAA0B,0BAxBrB,CAyBLC,uBAAwB,wBAzBnB,CA0BLC,gBAAiB,iBA1BZ,CA2BLC,oBAAqB,qBA3BhB,CA4BLC,aAAc,cA5BT,CA6BLC,eAAgB,gBA7BX,CA8BLC,eAAgB,gBA9BX,CA+BLC,oBAAqB,qBA/BhB,CAgCLC,mBAAoB,oBAhCf,CAiCLC,oBAAqB,qBAjChB,CAkCLC,WAAY,YAlCP,CAmCLC,YAAa,aAnCR,CAoCLC,iBAAkB,kBApCb,CAqCLC,kBAAmB,mBArCd;AAsCLC,uBAAwB,wBAtCnB,CAuCLC,yBAA0B,0BAvCrB,CAwCLC,gBAAiB,iBAxCZ,CAyCLC,QAAS,SAzCJ,CA0CLC,iBAAkB,kBA1Cb,CA2CLC,kBAAmB,mBA3Cd,CA4CLC,iBAAkB,kBA5Cb,CA6CLC,aAAc,cA7CT,CA8CLC,iBAAkB,kBA9Cb,CA+CLC,gBAAiB,iBA/CZ,CAgDLC,cAAe,eAhDV,CAiDLC,iBAAkB,kBAjDb,CAkDLC,cAAe,eAlDV,CAmDLC,QAAS,SAnDJ,CAoDLC,SAAU,UApDL,CAqDLC,YAAa,aArDR;AAsDLC,gBAAiB,iBAtDZ,CAuDLC,mBAAoB,oBAvDf,CAwDLC,cAAe,eAxDV,CAyDLC,MAAO,OAzDF,CA0DLC,gBAAiB,iBA1DZ,CA2DLC,WAAY,YA3DP,CA4DLC,yBAA0B,0BA5DrB,CA6DLC,gBAAiB,iBA7DZ,CA8DLC,gBAAiB,iBA9DZ,CA+DLC,eAAgB,gBA/DX,CAgELC,eAAgB,gBAhEX,CAiELC,aAAc,cAjET,CAkELC,gBAAiB,iBAlEZ,CAmELC,iBAAkB,kBAnEb,CAoELC,oBAAqB,qBApEhB,CAqELC,mBAAoB,oBArEf;AAsELC,eAAgB,gBAtEX,CAuELC,cAAe,eAvEV,CAwELC,gBAAiB,iBAxEZ,CA2ET,KAAAC,YAAc,CACVxE,qBAAsB,CAAC,MAAD,CAAS,OAAT,CADZ,CAEVC,kBAAmB,CAAC,MAAD,CAAS,OAAT,CAFT,CAGVC,gBAAiB,CAAC,UAAD,CAHP,CAIVC,aAAc,CAAC,UAAD,CAJJ,CAKVC,wBAAyB,CAAC,QAAD,CAAW,MAAX,CALf,CAMVC,gBAAiB,CAAC,UAAD,CANP,CAOVC,eAAgB,CAAC,MAAD,CAPN,CAQVC,iBAAkB,CAAC,MAAD,CAAS,OAAT,CARR,CASVC,eAAgB,CAAC,OAAD,CATN,CAUVC,eAAgB,CAAC,QAAD,CAAW,WAAX,CAVN,CAWVC,YAAa,CAAC,OAAD,CAAU,MAAV,CAXH,CAYVC,UAAW,CAAC,MAAD,CAZD,CAaVC,iBAAkB,CAAC,IAAD;AAAO,YAAP,CAAqB,MAArB,CAbR,CAcVC,gBAAiB,CAAC,IAAD,CAAO,YAAP,CAAqB,MAArB,CAdP,CAeVC,mBAAoB,CAAC,MAAD,CAAS,OAAT,CAfV,CAgBVC,wBAAyB,CAAC,QAAD,CAAW,QAAX,CAAqB,MAArB,CAhBf,CAiBVC,sBAAuB,CAAC,MAAD,CAAS,YAAT,CAAuB,WAAvB,CAjBb,CAkBVC,kBAAmB,CAAC,OAAD,CAlBT,CAmBVC,kBAAmB,EAnBT,CAoBVC,mBAAoB,EApBV,CAqBVC,iBAAkB,CAAC,MAAD,CAAS,MAAT,CArBR,CAsBVC,eAAgB,EAtBN,CAuBVC,qBAAsB,CAAC,QAAD,CAvBZ,CAwBVC,yBAA0B,CAAC,aAAD,CAxBhB,CAyBVC,uBAAwB,CAAC,aAAD,CAAgB,YAAhB,CAA8B,QAA9B,CAzBd,CA0BVC,gBAAiB,CAAC,UAAD,CAAa,OAAb,CA1BP,CA2BVC,oBAAqB,CAAC,YAAD,CA3BX;AA4BVC,aAAc,CAAC,MAAD,CAAS,MAAT,CAAiB,QAAjB,CAA2B,MAA3B,CA5BJ,CA6BVC,eAAgB,CAAC,MAAD,CAAS,OAAT,CAAkB,MAAlB,CA7BN,CA8BVC,eAAgB,CAAC,MAAD,CAAS,OAAT,CAAkB,MAAlB,CA9BN,CA+BVC,oBAAqB,CAAC,IAAD,CAAO,QAAP,CAAiB,MAAjB,CA/BX,CAgCVC,mBAAoB,CAAC,IAAD,CAAO,QAAP,CAAiB,MAAjB,CAhCV,CAiCVC,oBAAqB,CAAC,QAAD,CAAW,QAAX,CAAqB,MAArB,CAjCX,CAkCVC,WAAY,EAlCF,CAmCVC,YAAa,CAAC,MAAD,CAAS,YAAT,CAAuB,WAAvB,CAnCH,CAoCVC,iBAAkB,CAAC,QAAD,CApCR,CAqCVC,kBAAmB,CAAC,YAAD,CAAe,QAAf,CArCT,CAsCVC,uBAAwB,CAAC,OAAD,CAtCd,CAuCVC,yBAA0B,CAAC,OAAD,CAvChB,CAwCVC,gBAAiB,CAAC,UAAD,CAAa,OAAb,CAxCP,CAyCVC,QAAS,EAzCC;AA0CVC,iBAAkB,CAAC,OAAD,CAAU,MAAV,CA1CR,CA2CVC,kBAAmB,CAAC,MAAD,CAAS,OAAT,CA3CT,CA4CVC,iBAAkB,CAAC,QAAD,CAAW,UAAX,CA5CR,CA6CVC,aAAc,CAAC,MAAD,CAAS,UAAT,CA7CJ,CA8CVC,iBAAkB,CAAC,KAAD,CAAQ,OAAR,CA9CR,CA+CVC,gBAAiB,EA/CP,CAgDVC,cAAe,CAAC,QAAD,CAAW,WAAX,CAhDL,CAiDVC,iBAAkB,CAAC,YAAD,CAjDR,CAkDVC,cAAe,CAAC,YAAD,CAlDL,CAmDVC,QAAS,CAAC,MAAD,CAnDC,CAoDVC,SAAU,CAAC,KAAD,CAAQ,OAAR,CApDA,CAqDVC,YAAa,CAAE,UAAF,CArDH,CAsDVC,gBAAiB,CAAC,UAAD,CAtDP,CAuDVC,mBAAoB,CAAC,aAAD,CAvDV,CAwDVC,cAAe,CAAC,UAAD,CAxDL,CAyDVC,MAAO,EAzDG,CA0DVC,gBAAiB,CAAC,cAAD,CAAiB,OAAjB,CA1DP,CA2DVC,WAAY,CAAC,MAAD;AAAS,YAAT,CA3DF,CA4DVC,yBAA0B,CAAC,KAAD,CAAQ,OAAR,CA5DhB,CA6DVC,gBAAiB,EA7DP,CA8DVC,gBAAiB,CAAC,QAAD,CAAW,aAAX,CA9DP,CA+DVC,eAAgB,EA/DN,CAgEVC,eAAgB,CAAC,UAAD,CAhEN,CAiEVC,aAAc,CAAC,OAAD,CAAU,SAAV,CAAqB,WAArB,CAjEJ,CAkEVC,gBAAiB,CAAC,UAAD,CAlEP,CAmEVC,iBAAkB,CAAC,UAAD,CAnER,CAoEVC,oBAAqB,CAAC,cAAD,CApEX,CAqEVC,mBAAoB,CAAC,IAAD,CAAO,MAAP,CArEV,CAsEVC,eAAgB,CAAC,MAAD,CAAS,MAAT,CAtEN,CAuEVC,cAAe,CAAC,QAAD,CAAW,MAAX,CAvEL,CAwEVC,gBAAiB,CAAC,UAAD,CAxEP,CA4Ed,KAAAE,MAAQ,EACR,KAAAC,KAAO,EACP,KAAAC,OAAS,EAET,KAAAC,cAAgB,CACZC,MAAOJ,KADK,CAEZK,KAAMJ,IAFM;AAGZK,OAAQJ,MAHI,CAWhBlG,UAAA,CAAUuG,SAAV,CAAoBC,OAApB,CAA8BC,QAAgB,CAACtG,IAAD,CAAO,CACjD,IAAA,CAAKF,MAAL,CAAY,IAAZ,CAAiBZ,GAAjB,CAAA,CAAwBc,IADyB,CAIrDH,UAAA,CAAUuG,SAAV,CAAoBG,MAApB,CAA6BC,QAAe,EAAG,CAC3C,GAAIC,KAAA,CAAMC,OAAN,CAAc,IAAd,CAAmB5G,MAAnB,CAAJ,CAEI,MADA,KAAA,CAAKA,MAAL,CAAY6G,MAAZ,CAAmB,IAAnB,CAAwBzH,GAAxB,CAA6B,CAA7B,CACO,CAAA,CAAA,CAEP,KAAA,CAAKmH,OAAL,CAAa,IAAb,CACA,OAAO,CAAA,CANgC,CAqB/CjG,WAAA,CAAWgG,SAAX,CAAqBnG,IAArB,CAA4B2G,QAAa,EAAG,CAGxCC,QAASA,UAAS,CAACC,MAAD,CAAS7G,IAAT,CAAe,CAC7B,GAAIwG,KAAA,CAAMC,OAAN,CAAczG,IAAd,CAAJ,CACI,IAAK8G,CAAO,CAAH,CAAG,CAAAC,EAAA,CAAK/G,IAAL,CAAUP,MAAtB,CAA8BqH,CAA9B,CAAkCC,EAAlC,CAAsC,EAAED,CAAxC,CACID,MAAA,CAAOG,IAAP,CAAYhH,IAAA,CAAK8G,CAAL,CAAZ,CAFR,KAKID,OAAA,CAAOG,IAAP,CAAYhH,IAAZ,CANyB,CAHO,IACjCiH,EADiC,CAC7BH,CAD6B,CAC1BC,EAad,IAAI,CAAC,IAAD,CAAMG,SAAN,CAAgBlH,IAApB,CACI,MAAO,KAIX,KAAA6G,gBAAS,EACJ,KAAAtH,EAAI,CAAT,KAAY0H,EAAZ,CAAiB,IAAjB,CAAsBE,WAAtB,CAAkC1H,MAAlC,CAA0CF,CAA1C;AAA8C0H,EAA9C,CAAkD,EAAE1H,CAApD,CAAuD,CACnD,IAAA6H,QAAU,IAAA,CAAKD,WAAL,CAAiB5H,CAAjB,CACVqH,UAAA,CAAUC,eAAV,CAAkBO,OAAlB,CAA0BpH,IAA1B,CAFmD,CAIvD4G,SAAA,CAAUC,eAAV,CAAkB,IAAlB,CAAuBK,SAAvB,CAAiClH,IAAjC,CACA,OAAO6G,gBAzBiC,CA8B5C1G,WAAA,CAAWgG,SAAX,CAAqB9F,IAArB,CAA4BgH,QAAS,EAAG,CAEpC,MADW,KAAAtH,CAAKJ,OAALI,EACX,CAAYM,IAAZ,EAAoB,IAApB,CAAyB6G,SAAzB,CAAmCjH,IAFC,CAOxCE,WAAA,CAAWgG,SAAX,CAAqBmB,OAArB,CAA+BC,QAAgB,EAAG,CAAA,IACvCN,EAGP,KAAAJ,OAAS,EACJ,KAAAtH,EAAI,CAAT,KAAY0H,EAAZ,CAAiB,IAAjB,CAAsBE,WAAtB,CAAkC1H,MAAlC,CAA0CF,CAA1C,CAA8C0H,EAA9C,CAAkD,EAAE1H,CAApD,CACIsH,MAAA,CAAOG,IAAP,CAAY,IAAA,CAAKG,WAAL,CAAiB5H,CAAjB,CAAZ,CAAgCQ,IAAhC,CAGJ,OAAO8G,OATuC,CAclD1G,WAAA,CAAWgG,SAAX,CAAqBxG,OAArB,CAA+B6H,QAAgB,EAAG,CAC9C,MAAO,KAAP,CAAYN,SAAZ,CAAsBnH,IADwB,CAIlDI,WAAA,CAAWgG,SAAX,CAAqBsB,SAArB,CAAiCC,QAAkB,CAACC,QAAD;AAAWP,OAAX,CAAoB,CAGnE,IAAAP,OAASe,IAAAA,EAET,KAAAC,SAAY,IAAZA,CAAiBX,SACjB,KAAA,CAAKA,SAAL,CAAiBE,OACjB,KAAA,CAAKU,OAAL,CAAe,IACXH,SAAJ,GACId,MADJ,CACac,QAAA,CAASI,IAAT,CAAc,IAAd,CAAoBX,OAApB,CAA4BrH,IAA5B,CAAkC,IAAA,CAAKoH,WAAL,CAAiB,IAAjB,CAAsBA,WAAtB,CAAkC1H,MAAlC,CAA2C,CAA3C,CAAlC,CAAgFM,IAAhF,CADb,CAGA,KAAA,CAAKmH,SAAL,CAAiBW,QAEjB,OAAOhB,OAb4D,CAkBvE1G,WAAA,CAAWgG,SAAX,CAAqB6B,MAArB,CAA8BC,QAAe,CAACC,IAAD,CAAO,CAChD,IAAA,CAAKJ,OAAL,CAAeI,IADiC,CAMpD/H,WAAA,CAAWgG,SAAX,CAAqBgC,IAArB,CAA4BC,QAAS,EAAG,CACpC,IAAA,CAAKJ,MAAL,CAAYnC,IAAZ,CADoC,CAMxC1F,WAAA,CAAWgG,SAAX,CAAqB,OAArB,CAAA,CAAgC,QAAS,EAAG,CACxC,IAAA,CAAK6B,MAAL,CAAYpC,KAAZ,CADwC,CAM5CzF,WAAA,CAAWgG,SAAX,CAAqBG,MAArB,CAA8B+B,QAAS,EAAG,CACtC,IAAA,CAAKL,MAAL,CAAYlC,MAAZ,CADsC,CAI1C3F,WAAA,CAAWgG,SAAX,CAAqBmC,YAArB;AAAoCC,QAAQ,CAAChI,IAAD,CAAOC,OAAP,CAAgB,CACxD,IAAA,CAAKA,OAAL,CAAeA,OACf,KAAA,CAAKD,IAAL,CAAYA,IACZ,KAAA,CAAKiI,UAAL,CAAkB,EAClB,KAAA,CAAKrB,WAAL,CAAmB,EAGnB,KAAA,CAAKsB,UAAL,CADA,IACA,CADKX,OACL,CAFA,IAEA,CAFKZ,SAEL,CAFiB,IAGQ,YAAzB,GAAI1G,OAAJ,CAAYkI,QAAZ,CACI,IADJ,CACSD,UADT,CACsBE,MADtB,CAC6BC,IAD7B,CAEuC,UAFvC,GAEW,MAAOpI,QAAP,CAAekI,QAF1B,GAGI,IAHJ,CAGSD,UAHT,CAGsBjI,OAHtB,CAG8BkI,QAH9B,CAMA,KAAA,CAAKG,MAAL,CAAclD,WACVnF,QAAJ,CAAYoI,IAAZ,GACI,IADJ,CACSC,MADT,CACkBF,MAAA,CAAOG,MAAP,CAAcH,MAAA,CAAOI,MAAP,CAAc,IAAd,CAAmBF,MAAnB,CAAd,CAA0CrI,OAA1C,CAAkDoI,IAAlD,CADlB,CAfwD,CA+B5DzI,WAAA,CAAWgG,SAAX,CAAqB7F,QAArB,CAAgC0I,QAAiB,CAACzI,IAAD,CAAOC,OAAP,CAAgB,CAAA,IAQzDb,OARyD,CASzDsJ,QATyD,CAWzDC,SAGJ,KAAA,CAAKZ,YAAL,CAAkB/H,IAAlB,CAAwBC,OAAxB,CAEA;IAAA2I,SAAW,EAGX,KAAAC,SAAW,IAAXA,CAAgBZ,UAChB,KAAAa,UAAY,IAAZA,CAAiBlC,WAGjBiC,SAAA,CAASpC,IAAT,CAAc,IAAIlH,OAAJ,CAAYS,IAAZ,CAAkB,IAAlB,CAAwB,IAAxB,CAA8B,IAA9B,CAAd,CAGA,KAFA8I,SAAA,CAAUrC,IAAV,CAAe,IAAIlH,OAAJ,CAAY,IAAZ,CAAkB,IAAlB,CAAwB,IAAxB,CAA8B,IAA9B,CAAf,CAEA,CAAOsJ,QAAP,CAAgB3J,MAAhB,CAAA,CAGI,GAFA2H,IAEI,CAFMgC,QAAA,CAASE,GAAT,EAEN,CAAAlC,IAAA,GAAY+B,QAAhB,CAA0B,CACtB/B,IAAA,CAAUiC,SAAA,CAAUC,GAAV,EAEV,KAAAtK,KAAM,IAAA,CAAKyI,SAAL,CAAejH,OAAf,CAAuB+I,KAAvB,CAA8BnC,IAA9B,CAEN,IAAI,IAAJ,CAASU,OAAT,GAAqBlC,KAArB,EAA8B5G,IAA9B,GAAsC4G,KAAtC,CACI,KANkB,CAA1B,IAWA,IAAIwB,IAAJ,CAAYrH,IAAZ,CAAkB,CAEdf,IAAA,CAAM,IAAA,CAAKyI,SAAL,CAAejH,OAAf,CAAuBgJ,KAAvB,CAA8BpC,IAA9B,CAEN,IAAI,IAAJ,CAASU,OAAT,GAAqBlC,KAArB,EAA8B5G,IAA9B,GAAsC4G,KAAtC,CACI,KAGJwD,SAAA,CAASpC,IAAT,CAAcmC,QAAd,CACAE,UAAA,CAAUrC,IAAV,CAAeI,IAAf,CAEA,IAAI,IAAJ,CAASU,OAAT;AAAqBjC,IAArB,EAA6B7G,IAA7B,GAAqC6G,IAArC,CAAA,CAIA9F,IAAA,CAAOqH,IAAP,CAAerH,IACf,KAAA0J,SAAW1J,IAAX0J,CAAgBpJ,IAAhBoJ,EAAwBrC,IAAxBqC,CAAgCxJ,IAChC,KAAAyJ,WAAa,IAAA,CAAKb,MAAL,CAAYY,QAAZ,CACb,IAAI,CAACC,UAAL,CACI,GAAI,IAAJ,CAASjB,UAAT,CACIiB,UAAA,CAAa,IAAA,CAAKjB,UAAL,CAAgB1I,IAAhB,CADjB,KAGI,MAAU4J,MAAJ,CAAU,oBAAV,CAAiCF,QAAjC,CAA4C,GAA5C,CAAN,CAKR,IADA9J,OACA,CADU+J,UACV,CADqBjK,MACrB,CAAyB,CAAzB,EAAQ,EAAAE,OAAR,CAAA,CAA4B,CACxB,IAAAV,IAAMyK,UAAA,CAAW/J,OAAX,CAEN,IADAuJ,SACA,CADYnJ,IAAA,CAAKd,GAAL,CACZ,CAIA,GAAIuH,KAAA,CAAMC,OAAN,CAAcyC,SAAd,CAAJ,CAEI,IADAD,QACA,CADWC,SACX,CADqBzJ,MACrB,CAA0B,CAA1B,EAAQ,EAAAwJ,QAAR,CAAA,CACI,IAAKC,SAAA,CAAUD,QAAV,CAAL,CAAA,CAGA,GAAeQ,QAAf,GAnFCvI,MAmFD,CAnFQiD,gBAmFR,EAAesF,QAAf,GAnFyCvI,MAmFzC,CAnFgDkD,aAmFhD,EAnFkE,YAmFlE;AAAyBsF,UAAAzK,CAAWU,OAAXV,CAAzB,CAEO,GAAImB,MAAA,CAAO8I,SAAA,CAAUD,QAAV,CAAP,CAAJ,CACH7B,IAAA,CAAU,IAAItH,OAAJ,CAAYoJ,SAAA,CAAUD,QAAV,CAAZ,CAAiC,CAAChK,GAAD,CAAMgK,QAAN,CAAjC,CAAkD,IAAlD,CAAwD,IAAxD,CADP,KAGH,SALJ,KACI7B,KAAA,CAAU,IAAItH,OAAJ,CAAYoJ,SAAA,CAAUD,QAAV,CAAZ,CAAiC,CAAChK,GAAD,CAAMgK,QAAN,CAAjC,CAAkD,UAAlD,CAA8D,IAA9D,CAMdG,SAAA,CAASpC,IAAT,CAAcI,IAAd,CAVA,CAAA,CAHR,IAeWhH,OAAA,CAAO8I,SAAP,CAAJ,EACHE,QAAA,CAASpC,IAAT,CAAc,IAAIlH,OAAJ,CAAYoJ,SAAZ,CAAuBjK,GAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAd,CAvBoB,CAhB5B,CAXc,CAxCuC,CAiGjEkB,WAAA,CAAWgG,SAAX,CAAqBC,OAArB,CAA+BwD,QAAgB,CAACrJ,IAAD,CAAOC,OAAP,CAAgB,CAe3DqJ,QAASA,WAAU,CAACzC,OAAD,CAAU,CAMzB,GAAIA,OAAA,CAAQlH,GAAR,CAAYoG,MAAZ,EAAJ,CAA0B,CAEtB,IAAArH,IAAMmI,OAANnI,CAAciB,GAAdjB,CAAkBA,GAClB,KAAAY,OAASuH,OAATvH,CAAiBK,GAAjBL,CAAqBA,MAIrB,KADAN,OACA,CADI6J,QACJ,CADa3J,MACb,CAAOF,OAAA,EAAP,CAAA,CAAY,CACR,IAAAuK;AAAWV,QAAA,CAAS7J,OAAT,CACX,IAAIuK,QAAJ,CAAa5J,GAAb,EAAoB4J,QAApB,CAA6B5J,GAA7B,CAAiCL,MAAjC,GAA4CA,MAA5C,CAAoD,CAChD,GAAKiK,QAAL,CAAc5J,GAAd,CAAkBjB,GAAlB,CAAwBA,GAAxB,CACI,KAEJ,GAAE6K,QAAF,CAAW5J,GAAX,CAAejB,GAJiC,CAF5C,CAPU,CAND,CAf8B,IAOvDU,OAPuD,CAQvDsJ,QARuD,CAUvDC,SA8BJ,KAAA,CAAKZ,YAAL,CAAkB/H,IAAlB,CAAwBC,OAAxB,CAEA,KAAA2I,SAAW,EAGX,KAAAC,SAAW,IAAXA,CAAgBZ,UAChB,KAAAa,UAAY,IAAZA,CAAiBlC,WAGjB,KAAA4C,MAAQ,CACExJ,IADF,CAGR,KAAA6G,iBAAU,IAAItH,OAAJ,CAAYS,IAAZ,CAAkB,IAAlB,CAAwB,IAAxB,CAA8B,IAAIX,SAAJ,CAAcmK,KAAd,CAAqB,MAArB,CAA9B,CACVX,SAAA,CAASpC,IAAT,CAAcI,gBAAd,CAGA,KAFAiC,SAAA,CAAUrC,IAAV,CAAeI,gBAAf,CAEA,CAAOgC,QAAP,CAAgB3J,MAAhB,CAAA,CAGI,GAFA2H,gBAEI,CAFMgC,QAAA,CAASE,GAAT,EAEN,CAAAlC,gBAAA,GAAY+B,QAAhB,CAA0B,CACtB/B,gBAAA;AAAUiC,SAAA,CAAUC,GAAV,EAEV,KAAAzI,SAAS,IAAA,CAAK4G,SAAL,CAAejH,OAAf,CAAuB+I,KAAvB,CAA8BnC,gBAA9B,CAIMQ,KAAAA,EAAf,GAAI/G,QAAJ,EAA4BA,QAA5B,GAAuC+E,KAAvC,EAAgD/E,QAAhD,GAA2DgF,IAA3D,EAAmEhF,QAAnE,GAA8EiF,MAA9E,EAEIsB,gBAAA,CAAQlH,GAAR,CAAYkG,OAAZ,CAAoBvF,QAApB,CAGA,KAAJ,CAASiH,OAAT,GAAqBhC,MAArB,EAA+BjF,QAA/B,GAA0CiF,MAA1C,EACI+D,UAAA,CAAWzC,gBAAX,CAGJ,IAAI,IAAJ,CAASU,OAAT,GAAqBlC,KAArB,EAA8B/E,QAA9B,GAAyC+E,KAAzC,CACI,KAjBkB,CAA1B,IAAA,CAsBA/E,QAAA,CAAS,IAAA,CAAK4G,SAAL,CAAejH,OAAf,CAAuBgJ,KAAvB,CAA8BpC,gBAA9B,CAIMQ,KAAAA,EAAf,GAAI/G,QAAJ,EAA4BA,QAA5B,GAAuC+E,KAAvC,EAAgD/E,QAAhD,GAA2DgF,IAA3D,EAAmEhF,QAAnE,GAA8EiF,MAA9E,GAEIsB,gBAAA,CAAQlH,GAAR,CAAYkG,OAAZ,CAAoBvF,QAApB,CACA,CAAAuG,gBAAA,CAAQrH,IAAR;AAAec,QAHnB,CAMA,IAAI,IAAJ,CAASiH,OAAT,GAAqBhC,MAArB,EAA+BjF,QAA/B,GAA0CiF,MAA1C,CACI+D,UAAA,CAAWzC,gBAAX,CACA,CAAAA,gBAAA,CAAQrH,IAAR,CAAe,IAGnB,IAAI,IAAJ,CAAS+H,OAAT,GAAqBlC,KAArB,EAA8B/E,QAA9B,GAAyC+E,KAAzC,CACI,KAKJ,IADA7F,IACA,CADOqH,gBACP,CADerH,IACf,CAOA,GAHAqJ,QAAA,CAASpC,IAAT,CAAcmC,QAAd,CAGI,CAFJE,SAAA,CAAUrC,IAAV,CAAeI,gBAAf,CAEI,CAAA,IAAA,CAAKU,OAAL,GAAiBjC,IAAjB,EAAyBhF,QAAzB,GAAoCgF,IAAxC,CAAA,CAIA4D,QAAA,CAAW1J,IAAX,CAAgBM,IAAhB,EAAwB+G,gBAAxB,CAAgCnH,IAChC,KAAAyJ,WAAa,IAAA,CAAKb,MAAL,CAAYY,QAAZ,CACb,IAAI,CAACC,UAAL,CACI,GAAI,IAAJ,CAASjB,UAAT,CACIiB,UAAA,CAAa,IAAA,CAAKjB,UAAL,CAAgB1I,IAAhB,CADjB,KAGI,MAAU4J,MAAJ,CAAU,oBAAV,CAAiCF,QAAjC,CAA4C,GAA5C,CAAN,CAKR,IADA9J,OACA,CADU+J,UACV,CADqBjK,MACrB,CAAyB,CAAzB;AAAQ,EAAAE,OAAR,CAAA,CAA4B,CACxB,IAAAV,aAAMyK,UAAA,CAAW/J,OAAX,CAEN,IADAuJ,SACA,CADYnJ,IAAA,CAAKd,YAAL,CACZ,CAIA,GAAIuH,KAAA,CAAMC,OAAN,CAAcyC,SAAd,CAAJ,CAEI,IADAD,QACA,CADWC,SACX,CADqBzJ,MACrB,CAA0B,CAA1B,EAAQ,EAAAwJ,QAAR,CAAA,CACI,IAAKC,SAAA,CAAUD,QAAV,CAAL,CAAA,CAGA,GAAeQ,QAAf,GA7OKvI,MA6OL,CA7OYiD,gBA6OZ,EAAesF,QAAf,GA7O6CvI,MA6O7C,CA7OoDkD,aA6OpD,EA7OsE,YA6OtE,GAAyBsF,UAAAzK,CAAWU,OAAXV,CAAzB,CAEO,GAAImB,MAAA,CAAO8I,SAAA,CAAUD,QAAV,CAAP,CAAJ,CACH7B,gBAAA,CAAU,IAAItH,OAAJ,CAAYoJ,SAAA,CAAUD,QAAV,CAAZ,CAAiC,CAAChK,YAAD,CAAMgK,QAAN,CAAjC,CAAkD,IAAlD,CAAwD,IAAIrJ,SAAJ,CAAcsJ,SAAd,CAAyBD,QAAzB,CAAxD,CADP,KAGH,SALJ,KACI7B,iBAAA,CAAU,IAAItH,OAAJ,CAAYoJ,SAAA,CAAUD,QAAV,CAAZ,CAAiC,CAAChK,YAAD;AAAMgK,QAAN,CAAjC,CAAkD,UAAlD,CAA8D,IAAIrJ,SAAJ,CAAcsJ,SAAd,CAAyBD,QAAzB,CAA9D,CAMdG,SAAA,CAASpC,IAAT,CAAcI,gBAAd,CAVA,CAAA,CAHR,IAeWhH,OAAA,CAAO8I,SAAP,CAAJ,EACHE,QAAA,CAASpC,IAAT,CAAc,IAAIlH,OAAJ,CAAYoJ,SAAZ,CAAuBjK,YAAvB,CAA4B,IAA5B,CAAkC,IAAIW,SAAJ,CAAcG,IAAd,CAAoBd,YAApB,CAAlC,CAAd,CAvBoB,CAf5B,CAlDA,CA6FJ,MAAO8K,MAAP,CAAaxJ,IAxJ8C,CAyR/D3B,QAAA,CAAQoL,OAAR,CAAkBtL,OAAA,CAAQ,6CAAR,CAAlB,CAA4CsL,OAC5CpL,QAAA,CAAQsC,MAAR,CAAiBA,MACjBtC,QAAA,CAAQ0B,QAAR,CAAmBA,QACnB1B,QAAA,CAAQwH,OAAR,CA5HAA,QAAgB,CAAC7F,IAAD,CAAOC,OAAP,CAAgB,CAE5B,MAAO,CADUC,IAAIN,UACd,EAAWiG,OAAX,CAAmB7F,IAAnB,CAAyBC,OAAzB,CAFqB,CA6HhC5B,QAAA,CAAQqL,cAAR,CAnGAA,QAAuB,CAACC,IAAD,CAAOC,gBAAP,CAAyBvJ,MAAzB,CAAiC,CAAA,IAEhDwJ;AAAW,EAFqC,CAExB5K,GAE5B,IAAI,CAAC0K,IAAD,CAAMlJ,KAAV,CACI,KAAU2I,MAAJ,CAAU,wCAAV,CAAN,CAIJ,GAAI,CAAC/I,MAAD,CAAQnB,MAAZ,CAAoB,CAChB,GAAI0K,gBAAJ,CAAqB1K,MAArB,CAA6B,CACpB,IAAAF,EAAI,CAAT,KAAYC,GAAZ,CAAkB2K,gBAAlB,CAAmC1K,MAAnC,CAA2CF,CAA3C,CAA+CC,GAA/C,CAAoDD,CAApD,EAAyD,CAAzD,CACIoB,MAEA,CAFU7B,QAAA,CAASqL,gBAAA,CAAiB5K,CAAjB,CAAT,CAEV,CADAoB,MACA,CADQM,aACR,CADwB,CAAC,CAAD,CAAIiJ,IAAA,CAAKlJ,KAAL,CAAW,CAAX,CAAJ,CACxB,CAAAoJ,QAAA,CAASpD,IAAT,CAAcrG,MAAd,CAEJuJ,KAAA,CAAKG,eAAL,CAAuBD,QANE,CAQ7B,MAAOF,KATS,CAYf3K,CAAA,CAAI,CAAT,KAAYC,GAAZ,CAAkB2K,gBAAlB,CAAmC1K,MAAnC,CAA2CF,CAA3C,CAA+CC,GAA/C,CAAoDD,CAApD,EAAyD,CAAzD,CACI6K,QAAA,CAASpD,IAAT,CAActG,kBAAA,CAAmB5B,QAAA,CAASqL,gBAAA,CAAiB5K,CAAjB,CAAT,CAAnB,CAAkDqB,MAAlD,CAAd,CAIJ,KAAA0J,OAAS,CACThK,SAAA,CAAS4J,IAAT,CAAe,CACXV,MAAOA,QAAS,CAACzJ,IAAD,CAAO,CAGnB,IAFA,IAAIY,OAEJ,CAAO2J,MAAP;AAAgBF,QAAhB,CAAyB3K,MAAzB,CAAA,CAAiC,CAC7BkB,OAAA,CAAUyJ,QAAA,CAASE,MAAT,CACV,IAAI3J,OAAA,CAAQM,aAAR,CAAsB,CAAtB,CAAJ,CAA+BlB,IAAA,CAAKiB,KAAL,CAAW,CAAX,CAA/B,CACI,KAGAL,QAAA,CAAQM,aAAR,CAAsB,CAAtB,CAAJ,GAAiClB,IAAA,CAAKiB,KAAL,CAAW,CAAX,CAAjC,EACSjB,IAIL,CAJUsK,eAIV,GAHItK,IAGJ,CAHSsK,eAGT,CAH2B,EAG3B,EADAtK,IAAA,CAAKsK,eAAL,CAAqBrD,IAArB,CAA0BrG,OAA1B,CACA,CAAAyJ,QAAA,CAAS1D,MAAT,CAAgB4D,MAAhB,CAAwB,CAAxB,CALJ,EAOIA,MAPJ,EAOc,CAbe,CAkBjC,GAAIA,MAAJ,GAAeF,QAAf,CAAwB3K,MAAxB,CACI,MAAOsG,cAAP,CAAqBC,KAGzB,IAAIoE,QAAA,CAASE,MAAT,CAAA,CAAiBrJ,aAAjB,CAA+B,CAA/B,CAAJ,CAAwClB,IAAA,CAAKiB,KAAL,CAAW,CAAX,CAAxC,CACI,MAAO+E,cAAP,CAAqBE,IA1BN,CADZ,CAAf,CAgCAqE,OAAA,CAAS,CACThK,SAAA,CAAS4J,IAAT,CAAe,CACXX,MAAOA,QAAS,CAACxJ,IAAD,CAAO,CAGnB,IAFA,IAAIY,OAEJ,CAAO2J,MAAP,CAAgBF,QAAhB,CAAyB3K,MAAzB,CAAA,CAAiC,CAC7BkB,OAAA,CAAUyJ,QAAA,CAASE,MAAT,CACV,IAAIvK,IAAA,CAAKiB,KAAL,CAAW,CAAX,CAAJ;AAAoBL,OAAA,CAAQM,aAAR,CAAsB,CAAtB,CAApB,CACI,KAGAlB,KAAA,CAAKiB,KAAL,CAAW,CAAX,CAAJ,GAAsBL,OAAA,CAAQM,aAAR,CAAsB,CAAtB,CAAtB,EACSlB,IAIL,CAJUwK,gBAIV,GAHIxK,IAGJ,CAHSwK,gBAGT,CAH4B,EAG5B,EADAxK,IAAA,CAAKwK,gBAAL,CAAsBvD,IAAtB,CAA2BrG,OAA3B,CACA,CAAAyJ,QAAA,CAAS1D,MAAT,CAAgB4D,MAAhB,CAAwB,CAAxB,CALJ,EAOIA,MAPJ,EAOc,CAbe,CAkBjC,GAAIA,MAAJ,GAAeF,QAAf,CAAwB3K,MAAxB,CACI,MAAOsG,cAAP,CAAqBC,KAGzB,IAAIoE,QAAA,CAASE,MAAT,CAAA,CAAiBrJ,aAAjB,CAA+B,CAA/B,CAAJ,CAAwClB,IAAA,CAAKiB,KAAL,CAAW,CAAX,CAAxC,CACI,MAAO+E,cAAP,CAAqBE,IA1BN,CADZ,CAAf,CAgCA,OAAOiE,KA5F6C,CAoGxDtL,QAAA,CAAQ+G,WAAR,CAAsBA,WACtB/G,QAAA,CAAQmH,aAAR,CAAwBA,aACxBnH,QAAA,CAAQuB,UAAR,CAAqBA,UACrBvB,QAAA,CAAQ4L,gBAAR,CAA2BC,QAAS,EAAG,CAAE,MAAO5L,MAAA,CAAM,EAAN,CAAT,CAEvC,OAAOD,QAhvBc,CAAxBC,CAAA,CAivBCD,gBAjvBD,CA5BqG;",
"sources":["node_modules/estraverse/estraverse.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$estraverse$estraverse\"] = function(global,require,module,exports) {\n/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.version = require('./package.json').version;\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n\n};"],
"names":["shadow$provide","global","require","module","exports","clone","deepCopy","obj","ret","key","hasOwnProperty","val","upperBound","array","func","i","len","length","diff","current","Reference","parent","Element","node","path","wrap","ref","Controller","isNode","type","traverse","root","visitor","controller","extendCommentRange","comment","tokens","target","search","token","range","extendedRange","Syntax","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ComprehensionBlock","ComprehensionExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","DirectiveStatement","DoWhileStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","GeneratorExpression","Identifier","IfStatement","ImportExpression","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","ModuleSpecifier","NewExpression","ObjectExpression","ObjectPattern","Program","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchStatement","SwitchCase","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","VisitorKeys","BREAK","SKIP","REMOVE","VisitorOption","Break","Skip","Remove","prototype","replace","Reference.prototype.replace","remove","Reference.prototype.remove","Array","isArray","splice","Controller.prototype.path","addToPath","result","j","jz","push","iz","__current","__leavelist","element","Controller.prototype.type","parents","Controller.prototype.parents","Controller.prototype.current","__execute","Controller.prototype.__execute","callback","undefined","previous","__state","call","notify","Controller.prototype.notify","flag","skip","Controller.prototype.skip","Controller.prototype.remove","__initialize","Controller.prototype.__initialize","__worklist","__fallback","fallback","Object","keys","__keys","assign","create","Controller.prototype.traverse","current2","candidate","sentinel","worklist","leavelist","pop","leave","enter","nodeType","candidates","Error","Controller.prototype.replace","removeElem","nextElem","outer","version","attachComments","tree","providedComments","comments","leadingComments","cursor","trailingComments","cloneEnvironment","exports.cloneEnvironment"]
}
