{
"version":3,
"file":"module$node_modules$source_map$lib$source_node.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/source-map/lib/source-node.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$source_map$lib$source_node\"] = function(global,require,module,exports) {\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n\n};"],
"names":["shadow$provide","global","require","module","exports","SourceNode","aLine","aColumn","aSource","aChunks","aName","children","sourceContents","line","column","source","name","isSourceNode","add","SourceMapGenerator","util","REGEX_NEWLINE","fromStringWithSourceMap","SourceNode.fromStringWithSourceMap","aGeneratedCode","aSourceMapConsumer","aRelativePath","addMappingWithCode","mapping","code","undefined","node","join","originalLine","originalColumn","remainingLines","split","remainingLinesIndex","shiftNextLine","lineContents","length","newLine","lastGeneratedLine","lastGeneratedColumn","lastMapping","eachMapping","generatedLine","nextLine","substr","generatedColumn","splice","sources","forEach","sourceFile","content","sourceContentFor","setSourceContent","prototype","SourceNode.prototype.add","aChunk","Array","isArray","chunk","push","TypeError","prepend","SourceNode.prototype.prepend","i","unshift","walk","SourceNode.prototype.walk","aFn","len","SourceNode.prototype.join","aSep","newChildren","replaceRight","SourceNode.prototype.replaceRight","aPattern","aReplacement","lastChild","replace","SourceNode.prototype.setSourceContent","aSourceFile","aSourceContent","toSetString","walkSourceContents","SourceNode.prototype.walkSourceContents","Object","keys","fromSetString","toString","SourceNode.prototype.toString","str","toStringWithSourceMap","SourceNode.prototype.toStringWithSourceMap","aArgs","map","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","original","addMapping","generated","idx","NEWLINE_CODE","charCodeAt","sourceContent"]
}
