shadow$provide.module$node_modules$stack_trace$lib$stack_trace=function(global,require,module,exports){exports.get=function(belowFn){var oldLimit=Error.stackTraceLimit;Error.stackTraceLimit=Infinity;var dummyObject={},v8Handler=Error.prepareStackTrace;Error.prepareStackTrace=function(dummyObject,v8StackTrace){return v8StackTrace};Error.captureStackTrace(dummyObject,belowFn||exports.get);belowFn=dummyObject.stack;Error.prepareStackTrace=v8Handler;Error.stackTraceLimit=oldLimit;return belowFn};exports.parse=
function(err){if(!err.stack)return[];var self=this;return err.stack.split("\n").slice(1).map(function(line){if(line.match(/^\s*[-]{4,}$/))return self._createParsedCallSite({fileName:line,lineNumber:null,functionName:null,typeName:null,methodName:null,columnNumber:null,"native":null});if(line=line.match(/at (?:(.+)\s+)?\(?(?:(.+?):(\d+):(\d+)|([^)]+))\)?/)){var object=null,method=null,functionName=null,typeName=null,methodName=null,isNative="native"===line[5];line[1]&&(method=line[1].match(/([^\.]+)(?:\.(.+))?/),
object=method[1],method=method[2],functionName=line[1],typeName="Object");method&&(typeName=object,methodName=method);"\x3canonymous\x3e"===method&&(methodName=null,functionName="");line={fileName:line[2]||null,lineNumber:parseInt(line[3],10)||null,functionName,typeName,methodName,columnNumber:parseInt(line[4],10)||null,"native":isNative};return self._createParsedCallSite(line)}}).filter(function(callSite){return!!callSite})};exports._createParsedCallSite=function(properties){var methods={},property$jscomp$0;
for(property$jscomp$0 in properties){var prefix="get";"native"===property$jscomp$0&&(prefix="is");var method=prefix+property$jscomp$0.substr(0,1).toUpperCase()+property$jscomp$0.substr(1);(function(property){methods[method]=function(){return properties[property]}})(property$jscomp$0)}prefix=Object.create(methods);for(property$jscomp$0 in properties)prefix[property$jscomp$0]=properties[property$jscomp$0];return prefix}}
//# sourceMappingURL=module$node_modules$stack_trace$lib$stack_trace.js.map
