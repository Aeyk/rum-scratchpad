shadow$provide.module$node_modules$buffer_from$index=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer,toString=Object.prototype.toString,isModern="function"===typeof Buffer.alloc&&"function"===typeof Buffer.allocUnsafe&&"function"===typeof Buffer.from;module.exports=function(value,encodingOrOffset,length){if("number"===typeof value)throw new TypeError('"value" argument must not be a number');if("ArrayBuffer"===toString.call(value).slice(8,-1)){encodingOrOffset>>>=
0;var maxLength=value.byteLength-encodingOrOffset;if(0>maxLength)throw new RangeError("'offset' is out of bounds");if(void 0===length)length=maxLength;else if(length>>>=0,length>maxLength)throw new RangeError("'length' is out of bounds");return isModern?Buffer.from(value.slice(encodingOrOffset,encodingOrOffset+length)):new Buffer(new Uint8Array(value.slice(encodingOrOffset,encodingOrOffset+length)))}if("string"===typeof value){length=encodingOrOffset;if("string"!==typeof length||""===length)length=
"utf8";if(!Buffer.isEncoding(length))throw new TypeError('"encoding" must be a valid string encoding');return isModern?Buffer.from(value,length):new Buffer(value,length)}return isModern?Buffer.from(value):new Buffer(value)}}
//# sourceMappingURL=module$node_modules$buffer_from$index.js.map
