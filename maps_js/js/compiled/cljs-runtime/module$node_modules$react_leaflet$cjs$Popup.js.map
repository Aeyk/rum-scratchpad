{
"version":3,
"file":"module$node_modules$react_leaflet$cjs$Popup.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,2CAAf,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxGA,OAAA,CAAQC,UAAR,CAAqB,CAAA,CACrBD,QAAA,CAAQE,KAAR,CAAgB,IAAK,EAEjBC,OAAAA,CAAQL,OAAA,CAAQ,mDAAR,CAEZ,KAAIM,SAAWN,OAAA,CAAQ,8CAAR,CAAf,CAEIO,OAASP,OAAA,CAAQ,iCAAR,CAEPI,QAAAA,CAAQ,CAAC,CAAA,CAAGC,MAAH,CAASG,sBAAV,EAAkCC,QAAoB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CACnF,MAAO,CACLC,SAAU,IAAIN,QAAJ,CAAaF,KAAb,CAAmBM,KAAnB,CAA0BC,OAA1B,CAAkCE,gBAAlC,CADL,CAELF,OAFK,CAD4E,CAAvE,CAKXG,QAA0B,CAACC,OAAD,CAAUJ,OAAV,CAAmBD,KAAnB;AAA0BM,OAA1B,CAAmC,CAC9D,MAAM,CACJC,OADI,CAEJC,MAFI,CAGJC,QAHI,CAAA,CAIFT,KACJ,EAAC,CAAA,CAAGH,MAAH,CAAUa,SAAX,EAAsBC,QAAiB,EAAG,CAKxCC,QAASA,YAAW,CAACC,KAAD,CAAQ,CACtBA,KAAJ,CAAUC,KAAV,GAAoBZ,QAApB,GACEA,QAAA,CAASa,MAAT,EAEA,CADAT,OAAA,CAAQ,CAAA,CAAR,CACA,CAAU,IAAV,EAAAE,MAAA,CAAiB,IAAK,EAAtB,CAA0BA,MAAA,EAH5B,CAD0B,CAQ5BQ,QAASA,aAAY,CAACH,KAAD,CAAQ,CACvBA,KAAJ,CAAUC,KAAV,GAAoBZ,QAApB,GACEI,OAAA,CAAQ,CAAA,CAAR,CACA,CAAW,IAAX,EAAAC,OAAA,CAAkB,IAAK,EAAvB,CAA2BA,OAAA,EAF7B,CAD2B,CAZ7B,MAAM,CACJL,QADI,CAAA,CAEFG,OAiBJJ,QAAA,CAAQgB,GAAR,CAAYC,EAAZ,CAAe,CACbC,UAAWP,WADE,CAEbQ,WAAYJ,YAFC,CAAf,CAKgC,KAAhC,EAAIf,OAAJ,CAAYE,gBAAZ,EAEkB,IAIhB,EAJIM,QAIJ,EAHEP,QAAA,CAASmB,SAAT,CAAmBZ,QAAnB,CAGF,CAAAP,QAAA,CAASoB,MAAT,CAAgBrB,OAAhB,CAAwBgB,GAAxB,CANF,EASEhB,OAAA,CAAQE,gBAAR,CAAyBoB,SAAzB,CAAmCrB,QAAnC,CAGF;MAAOsB,SAAoB,EAAG,CAC5BvB,OAAA,CAAQgB,GAAR,CAAYQ,GAAZ,CAAgB,CACdN,UAAWP,WADG,CAEdQ,WAAYJ,YAFE,CAAhB,CAKgC,KAAhC,EAAIf,OAAJ,CAAYE,gBAAZ,CACEF,OAAA,CAAQgB,GAAR,CAAYS,WAAZ,CAAwBxB,QAAxB,CADF,CAGED,OAAA,CAAQE,gBAAR,CAAyBwB,WAAzB,EAT0B,CArCU,CAA1C,CAiDG,CAACtB,OAAD,CAAUJ,OAAV,CAAmBK,OAAnB,CAA4BC,OAA5B,CAAqCC,MAArC,CAA6CC,QAA7C,CAjDH,CAN8D,CALlD,CA8DdjB,QAAA,CAAQE,KAAR,CAAgBA,OA1EwF;",
"sources":["node_modules/react-leaflet/cjs/Popup.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_leaflet$cjs$Popup\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.Popup = void 0;\n\nvar _core = require(\"@react-leaflet/core\");\n\nvar _leaflet = require(\"leaflet\");\n\nvar _react = require(\"react\");\n\nconst Popup = (0, _core.createOverlayComponent)(function createPopup(props, context) {\n  return {\n    instance: new _leaflet.Popup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  (0, _react.useEffect)(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n\n      if (context.overlayContainer == null) {\n        context.map.removeLayer(instance);\n      } else {\n        context.overlayContainer.unbindPopup();\n      }\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});\nexports.Popup = Popup;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","Popup","_core","_leaflet","_react","createOverlayComponent","createPopup","props","context","instance","overlayContainer","usePopupLifecycle","element","setOpen","onClose","onOpen","position","useEffect","addPopup","onPopupOpen","event","popup","update","onPopupClose","map","on","popupopen","popupclose","setLatLng","openOn","bindPopup","removePopup","off","removeLayer","unbindPopup"]
}
