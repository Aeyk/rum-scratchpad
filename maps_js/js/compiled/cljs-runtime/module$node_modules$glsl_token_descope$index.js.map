{
"version":3,
"file":"module$node_modules$glsl_token_descope$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,4CAAf,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmDzGC,QAASA,eAAc,EAAG,CACxB,IAAIC,EAAI,CAER,OAAOC,SAAe,CAACC,IAAD,CAAO,CAC3B,MAAOA,KAAP,CAAc,GAAd,CAAoB,CAACF,CAAA,EAAD,EAAMG,QAAN,CAAe,EAAf,CADO,CAHL,CAlD1BN,MAAA,CAAOC,OAAP,CAEAM,QAAyB,CAACC,MAAD,CAASJ,MAAT,CAAiB,CACxCL,OAAA,CAAQ,4CAAR,CAAA,CAA4BS,MAA5B,CACAT,QAAA,CAAQ,4CAAR,CAAA,CAA4BS,MAA5B,CACAT,QAAA,CAAQ,iDAAR,CAAA,CAAiCS,MAAjC,CACAT,QAAA,CAAQ,kDAAR,CAAA,CAAkCS,MAAlC,CAuDA,KAFA,IAAIC;AAAQ,EAAZ,CAESC,EAAI,CAAb,CAAgBA,CAAhB,CArDuBF,MAqDvB,CAA2BG,MAA3B,CAAmCD,CAAA,EAAnC,CAAwC,CACtC,IAAIE,MAtDiBJ,MAsDT,CAAOE,CAAP,CACRE,MAAJ,CAAUC,WAAV,GACEJ,KAAA,CAAMG,KAAN,CAAYH,KAAZ,CACA,CADqBA,KAAA,CAAMG,KAAN,CAAYH,KAAZ,CACrB,EAD2C,EAC3C,CAAAA,KAAA,CAAMG,KAAN,CAAYH,KAAZ,CAAA,CAAmBG,KAAnB,CAAyBE,IAAzB,CAAA,CAAiCF,KAFnC,CAFsC,CApDpCG,MAAAA,CAAUX,MAAVW,EAAoBb,cAAA,EACpBc,EAAAA,CAAU,EAEd,KAASN,KAAT,CAAa,CAAb,CAAgBA,KAAhB,CAAoBF,MAApB,CAA2BG,MAA3B,CAAmCD,KAAA,EAAnC,CAAwC,CACtC,IAAIE,eAAQJ,MAAA,CAAOE,KAAP,CAAZ,CACIO,MAAQL,cAARK,CAAcA,KADlB,CAEIZ,KAAQO,cAARP,CAAcS,IAElBF,eAAA,CAAMM,QAAN,CAAiB,CAAA,CAEjB,IAAmB,OAAnB,GAAIN,cAAJ,CAAUO,IAAV,EACIC,CAAAR,cAAAQ,CAAMA,QADV,EAEIC,CAAAT,cAAAS,CAAMA,YAFV,CAEA,CAIA,IAFA,IAAIC,MAAQ,CAAA,CAAZ,CAESC,EAAIN,KAAJM,CAAUZ,MAAVY,CAAmB,CAA5B,CAAoC,CAApC,EAA+BA,CAA/B,CAAuCA,CAAA,EAAvC,CAA4C,CAC1C,IAAIC,EA2CDf,KA3CK,CAAMQ,KAAA,CAAMM,CAAN,CAAN,CACR,IAAKC,CAAL,EACKA,CAAA,CAAEnB,IAAF,CADL,CACA,CAEAiB,KAAA;AAAQ,CAAA,CAGR,IAAIC,CAAJ,CAAO,KAEPX,eAAA,CAAMM,QAAN,CAAiBN,cAAjB,CAAuBE,IACvBF,eAAA,CAAME,IAAN,CAAaE,CAAA,CAAIX,IAAJ,CAAb,CAAyBW,CAAA,CAAIX,IAAJ,CAAzB,EAAsCU,MAAA,CAAQV,IAAR,CAAcO,cAAd,CAAtC,EAA8DA,cAA9D,CAAoEE,IARpE,CAH0C,CAgBvCQ,KAAL,GACEV,cACA,CADMM,QACN,CADiBN,cACjB,CADuBE,IACvB,CAAAF,cAAA,CAAME,IAAN,CAAaE,CAAA,CAAIX,IAAJ,CAAb,CAAyBW,CAAA,CAAIX,IAAJ,CAAzB,EAAsCU,MAAA,CAAQV,IAAR,CAAcO,cAAd,CAAtC,EAA8DA,cAA9D,CAAoEE,IAFtE,CApBA,CATsC,CAmCxC,MAAON,OA7CiC,CAH+D;",
"sources":["node_modules/glsl-token-descope/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$glsl_token_descope$index\"] = function(global,require,module,exports) {\nmodule.exports = glslTokenDescope\n\nfunction glslTokenDescope(tokens, rename) {\n  require('glsl-token-depth')(tokens)\n  require('glsl-token-scope')(tokens)\n  require('glsl-token-properties')(tokens)\n  require('glsl-token-assignments')(tokens)\n\n  var scope   = getScope(tokens)\n  var renamer = rename || defaultRenamer()\n  var map     = {}\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    var stack = token.stack\n    var name  = token.data\n\n    token.descoped = false\n\n    if (token.type !== 'ident') continue\n    if (token.property) continue\n    if (token.structMember) continue\n\n    var bound = false\n\n    for (var j = stack.length - 1; j >= 0; j--) {\n      var s = scope[stack[j]]\n      if (!s) continue\n      if (!s[name]) continue\n\n      bound = true\n\n      // exit if declaration not in top-level scope\n      if (j) break\n\n      token.descoped = token.data\n      token.data = map[name] = map[name] || renamer(name, token) || token.data\n    }\n\n    // Handle unbound variables, i.e. ones not defined anywhere\n    // in the shader source but still used.\n    if (!bound) {\n      token.descoped = token.data\n      token.data = map[name] = map[name] || renamer(name, token) || token.data\n    }\n  }\n\n  return tokens\n}\n\nfunction defaultRenamer() {\n  var k = 0\n\n  return function rename(name) {\n    return name + '_' + (k++).toString(36)\n  }\n}\n\nfunction getScope(tokens) {\n  var scope = {}\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.declaration) {\n      scope[token.scope] = scope[token.scope] || {}\n      scope[token.scope][token.data] = token\n    }\n  }\n\n  return scope\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","defaultRenamer","k","rename","name","toString","glslTokenDescope","tokens","scope","i","length","token","declaration","data","renamer","map","stack","descoped","type","property","structMember","bound","j","s"]
}
