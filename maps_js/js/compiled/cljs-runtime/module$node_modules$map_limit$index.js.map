{
"version":3,
"file":"module$node_modules$map_limit$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,mCAAf,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAChG,IAAIC,KAAOH,OAAA,CAAQ,+BAAR,CAAX,CACII,KAAOA,QAAa,EAAE,EAE1BH,OAAA,CAAOC,OAAP,CAEAG,QAAiB,CAACC,GAAD,CAAMC,KAAN,CAAaC,QAAb,CAAuBC,QAAvB,CAAiC,CAmBhDC,QAASA,MAAK,EAAG,CACf,GAAIC,QAAJ,GAAiBC,CAAjB,CACE,MAAOH,SAAA,CAAS,IAAT,CAAeI,OAAf,CAET,KAAA,CAAOC,MAAP,CAAgBP,KAAhB,EACMQ,CAAAA,OADN,EAEMC,CAFN,GAEYJ,CAFZ,CAAA,CAGEK,IAAA,EAPa,CAgBjBA,QAASA,KAAI,EAAG,CACd,IAAIC,IAAMF,CAAA,EAEVF,OAAA,EAAU,CAEVN,SAAA,CAASF,GAAA,CAAIY,GAAJ,CAAT,CAAmB,QAAQ,CAACC,GAAD,CAAMC,MAAN,CAAc,CACvC,GAAID,GAAJ,CAAS,MAVXJ,QACO,CADG,CAAA,CACH,CAAAN,QAAA,CASiBU,GATjB,CAULN,QAAA,CAAQK,GAAR,CAAA,CAAeE,MACfT,SAAA,EAAY,CACZ,GAAAG,MACAJ,MAAA,EALuC,CAAzC,CALc,CAlChB,IAAIC,SAAW,CAAf,CACII;AAAU,CAAA,CADd,CAEIF,QAAU,EAFd,CAGIC,OAAS,CAHb,CAIIF,EAAIN,GAAJM,CAAQS,MAJZ,CAKIL,EAAI,CAERP,SAAA,CAAWN,IAAA,CAAKM,QAAL,EAAiBL,IAAjB,CACX,IAAwB,UAAxB,GAAI,MAAOI,SAAX,CAAoC,KAAUc,MAAJ,CACxC,wDADwC,CAAN,CAIpC,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBX,CAApB,CAAuBW,CAAA,EAAvB,CACEV,OAAA,CAAQU,CAAR,CAAA,CAAa,IAGfb,MAAA,EAjBgD,CAN8C;",
"sources":["node_modules/map-limit/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$map_limit$index\"] = function(global,require,module,exports) {\nvar once = require('once')\nvar noop = function noop(){}\n\nmodule.exports = mapLimit\n\nfunction mapLimit(arr, limit, iterator, callback) {\n  var complete = 0\n  var aborted = false\n  var results = []\n  var queued = 0\n  var l = arr.length\n  var i = 0\n\n  callback = once(callback || noop)\n  if (typeof iterator !== 'function') throw new Error(\n    'Iterator function must be passed as the third argument'\n  )\n\n  for (var r = 0; r < l; r++) {\n    results[r] = null\n  }\n\n  flush()\n\n  function flush() {\n    if (complete === l)\n      return callback(null, results)\n\n    while (queued < limit) {\n      if (aborted) break\n      if (i === l) break\n      push()\n    }\n  }\n\n  function abort(err) {\n    aborted = true\n    return callback(err)\n  }\n\n  function push() {\n    var idx = i++\n\n    queued += 1\n\n    iterator(arr[idx], function(err, result) {\n      if (err) return abort(err)\n      results[idx] = result\n      complete += 1\n      queued -= 1\n      flush()\n    })\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","once","noop","mapLimit","arr","limit","iterator","callback","flush","complete","l","results","queued","aborted","i","push","idx","err","result","length","Error","r"]
}
