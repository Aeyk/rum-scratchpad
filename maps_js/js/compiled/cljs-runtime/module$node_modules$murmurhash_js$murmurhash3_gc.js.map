{
"version":3,
"file":"module$node_modules$murmurhash_js$murmurhash3_gc.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/murmurhash-js/murmurhash3_gc.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$murmurhash_js$murmurhash3_gc\"] = function(global,require,module,exports) {\n/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nif(typeof module !== \"undefined\") {\n  module.exports = murmurhash3_32_gc\n}\n};"],
"names":["shadow$provide","global","require","module","exports","murmurhash3_32_gc","key","seed","remainder","length","bytes","h1","i","k1","charCodeAt","c1","c2","h1b"]
}
