{
"version":3,
"file":"module$node_modules$static_eval$index.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/static-eval/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$static_eval$index\"] = function(global,require,module,exports) {\nvar unparse = require('escodegen').generate;\n\nmodule.exports = function (ast, vars, opts) {\n    if(!opts) opts = {};\n    var rejectAccessToMethodsOnFunctions = !opts.allowAccessToMethodsOnFunctions;\n\n    if (!vars) vars = {};\n    var FAIL = {};\n\n    var result = (function walk (node, noExecute) {\n        if (node.type === 'Literal') {\n            return node.value;\n        }\n        else if (node.type === 'UnaryExpression'){\n            var val = walk(node.argument, noExecute)\n            if (node.operator === '+') return +val\n            if (node.operator === '-') return -val\n            if (node.operator === '~') return ~val\n            if (node.operator === '!') return !val\n            return FAIL\n        }\n        else if (node.type === 'ArrayExpression') {\n            var xs = [];\n            for (var i = 0, l = node.elements.length; i < l; i++) {\n                var x = walk(node.elements[i], noExecute);\n                if (x === FAIL) return FAIL;\n                xs.push(x);\n            }\n            return xs;\n        }\n        else if (node.type === 'ObjectExpression') {\n            var obj = {};\n            for (var i = 0; i < node.properties.length; i++) {\n                var prop = node.properties[i];\n                var value = prop.value === null\n                    ? prop.value\n                    : walk(prop.value, noExecute)\n                ;\n                if (value === FAIL) return FAIL;\n                obj[prop.key.value || prop.key.name] = value;\n            }\n            return obj;\n        }\n        else if (node.type === 'BinaryExpression' ||\n                 node.type === 'LogicalExpression') {\n            var op = node.operator;\n\n            if (op === '&&') {\n                var l = walk(node.left);\n                if (l === FAIL) return FAIL;\n                if (!l) return l;\n                var r = walk(node.right);\n                if (r === FAIL) return FAIL;\n                return r;\n            }\n            else if (op === '||') {\n                var l = walk(node.left);\n                if (l === FAIL) return FAIL;\n                if (l) return l;\n                var r = walk(node.right);\n                if (r === FAIL) return FAIL;\n                return r;\n            }\n\n            var l = walk(node.left, noExecute);\n            if (l === FAIL) return FAIL;\n            var r = walk(node.right, noExecute);\n            if (r === FAIL) return FAIL;\n\n            if (op === '==') return l == r;\n            if (op === '===') return l === r;\n            if (op === '!=') return l != r;\n            if (op === '!==') return l !== r;\n            if (op === '+') return l + r;\n            if (op === '-') return l - r;\n            if (op === '*') return l * r;\n            if (op === '/') return l / r;\n            if (op === '%') return l % r;\n            if (op === '<') return l < r;\n            if (op === '<=') return l <= r;\n            if (op === '>') return l > r;\n            if (op === '>=') return l >= r;\n            if (op === '|') return l | r;\n            if (op === '&') return l & r;\n            if (op === '^') return l ^ r;\n\n            return FAIL;\n        }\n        else if (node.type === 'Identifier') {\n            if ({}.hasOwnProperty.call(vars, node.name)) {\n                return vars[node.name];\n            }\n            else return FAIL;\n        }\n        else if (node.type === 'ThisExpression') {\n            if ({}.hasOwnProperty.call(vars, 'this')) {\n                return vars['this'];\n            }\n            else return FAIL;\n        }\n        else if (node.type === 'CallExpression') {\n            var callee = walk(node.callee, noExecute);\n            if (callee === FAIL) return FAIL;\n            if (typeof callee !== 'function') return FAIL;\n\n\n            var ctx = node.callee.object ? walk(node.callee.object, noExecute) : FAIL;\n            if (ctx === FAIL) ctx = null;\n\n            var args = [];\n            for (var i = 0, l = node.arguments.length; i < l; i++) {\n                var x = walk(node.arguments[i], noExecute);\n                if (x === FAIL) return FAIL;\n                args.push(x);\n            }\n\n            if (noExecute) {\n                return undefined;\n            }\n\n            return callee.apply(ctx, args);\n        }\n        else if (node.type === 'MemberExpression') {\n            var obj = walk(node.object, noExecute);\n            if((obj === FAIL) || (\n                (typeof obj == 'function') && rejectAccessToMethodsOnFunctions\n            )){\n                return FAIL;\n            }\n            if (node.property.type === 'Identifier' && !node.computed) {\n                if (isUnsafeProperty(node.property.name)) return FAIL;\n                return obj[node.property.name];\n            }\n            var prop = walk(node.property, noExecute);\n            if (prop === null || prop === FAIL) return FAIL;\n            if (isUnsafeProperty(prop)) return FAIL;\n            return obj[prop];\n        }\n        else if (node.type === 'ConditionalExpression') {\n            var val = walk(node.test, noExecute)\n            if (val === FAIL) return FAIL;\n            return val ? walk(node.consequent) : walk(node.alternate, noExecute)\n        }\n        else if (node.type === 'ExpressionStatement') {\n            var val = walk(node.expression, noExecute)\n            if (val === FAIL) return FAIL;\n            return val;\n        }\n        else if (node.type === 'ReturnStatement') {\n            return walk(node.argument, noExecute)\n        }\n        else if (node.type === 'FunctionExpression') {\n            var bodies = node.body.body;\n\n            // Create a \"scope\" for our arguments\n            var oldVars = {};\n            Object.keys(vars).forEach(function(element){\n                oldVars[element] = vars[element];\n            })\n\n            for(var i=0; i<node.params.length; i++){\n                var key = node.params[i];\n                if(key.type == 'Identifier'){\n                  vars[key.name] = null;\n                }\n                else return FAIL;\n            }\n            for(var i in bodies){\n                if(walk(bodies[i], true) === FAIL){\n                    return FAIL;\n                }\n            }\n            // restore the vars and scope after we walk\n            vars = oldVars;\n\n            var keys = Object.keys(vars);\n            var vals = keys.map(function(key) {\n                return vars[key];\n            });\n            return Function(keys.join(', '), 'return ' + unparse(node)).apply(null, vals);\n        }\n        else if (node.type === 'TemplateLiteral') {\n            var str = '';\n            for (var i = 0; i < node.expressions.length; i++) {\n                str += walk(node.quasis[i], noExecute);\n                str += walk(node.expressions[i], noExecute);\n            }\n            str += walk(node.quasis[i], noExecute);\n            return str;\n        }\n        else if (node.type === 'TaggedTemplateExpression') {\n            var tag = walk(node.tag, noExecute);\n            var quasi = node.quasi;\n            var strings = quasi.quasis.map(walk);\n            var values = quasi.expressions.map(walk);\n            return tag.apply(null, [strings].concat(values));\n        }\n        else if (node.type === 'TemplateElement') {\n            return node.value.cooked;\n        }\n        else return FAIL;\n    })(ast);\n\n    return result === FAIL ? undefined : result;\n};\n\nfunction isUnsafeProperty(name) {\n    return name === 'constructor' || name === '__proto__';\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","isUnsafeProperty","name","unparse","generate","module.exports","ast","vars","opts","rejectAccessToMethodsOnFunctions","allowAccessToMethodsOnFunctions","FAIL","result","walk","node","noExecute","type","value","val","argument","operator","xs","i","l","elements","length","x","push","obj","properties","prop","key","op","left","r","right","hasOwnProperty","call","callee","ctx","object","args","arguments","apply","property","computed","test","consequent","alternate","expression","bodies","body","oldVars","Object","keys","forEach","element","params","vals","map","Function","join","str","expressions","quasis","tag","quasi","strings","values","concat","cooked","undefined"]
}
