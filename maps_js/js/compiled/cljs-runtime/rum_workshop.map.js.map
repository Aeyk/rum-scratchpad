{"version":3,"sources":["rum_workshop/map.cljs"],"mappings":";;;;AAUA,AAACA;AAED,AAAKC,AAAa,AAAA,AAAiBC;AACnC,AAAKC,AAAS,AAAA,AAAA,AAAA,AAACC;AACf,AAAA,AAAAC,AAAAC,AAAA,AAAUE;AAAV,AAAA,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAgBE,AAEb,AAAKC;AAAL,AAEE,AACC,AAAA,AAACC,AACD,AAAA,AAAA,AAAA,AAAA,AACC,AAAA,AAAA,AAAA,AAAA,AAACC;AAPR;AAiBA,AAAKC,AAAS,AAAA,AAACT;AACf,AAAA,AAAMU;AAAN,AACE,AAAA;AAAA,AAAiB,AAAA,AAACC;;AAAlB;AAAA,AACkB,AAAA,AAACA;;AADnB;AAAA,AAEe,AAAA,AAACA;;AAFhB;AAAA,AAGiB,AAAA,AAACA;;AAHlB;AAAA,AAKU,AAACA,AACA,AAAA,AAAAC,AAACC;AAAD,AACE,AAACC,AAAOL,AAAS,AAAAG;AAClBD;;AACF,AAAA,AAAAI,AAAQC;AACN,AAAA,AAAAC,AAACJ;AAAD,AACE,AAAAI,AAACH,AAAOL;AACTE;;AAHH;;AAIA,AAAA,AAAAO,AAACP,AAAgBF;;AAb3B,AAcE,AAAA,AAAA,AAACU,AACUC;;AAEX,AAAA,AAAA,AAACD,AACAE;;AACD,AAAA,AAAA,AAACF,AAGAG;;AACD,AAAA,AAAA,AAACH,AAGAI;;AACD,AAAA,AAAA,AAACJ,AAGAK;;AAEL,AAAA,AAAMC;AAAN,AACE,AAACf;;AACD,AAACgB,AAAU,AAACtB,AAAKP;;AAEnB,AAAA,AAAe8B;AAAf,AACE,AAACF","names":["cljs.core/enable-console-print!","rum-workshop.map/root-element","js/document","rum-workshop.map/position","cljs.core.atom","rum.core/lazy-build","rum.core/build-defc","daiquiri.core/create-element","rum-workshop.map/app","rum.core/reactive","state","js/module$node_modules$esri_leaflet$dist$esri_leaflet_debug.basemapLayer","js/module$node_modules$leaflet$dist$leaflet_src.map","rum-workshop.map/location","rum-workshop.map/init-keybindings","js/console.log","p1__27608#","js/navigator.geolocation.getCurrentPosition","cljs.core/reset!","cljs.core/not","js/navigator.geolocation","p1__27609#","cljs.core/deref","keybind.core/bind!","space","left","right","up","down","rum-workshop.map/refresh","rum.core/mount","rum-workshop.map/init"],"sourcesContent":["(ns rum-workshop.map\n  (:require [rum.core :as rum]\n            [keybind.core :as key]\n            ;; https://shadow-cljs.github.io/docs/UsersGuide.html#_conditional_reading\n            ;; shadow-cljs example for import libraries\n            [\"react-leaflet\" :as react-leaflet]\n            [\"leaflet\" :as leaflet]\n            [\"esri-leaflet\" :as esri-leaflet]))\n;; https://gist.github.com/orolle/21902cc4a58f2a97c7ab27c2fb7b2503\n\n(enable-console-print!)\n\n(def root-element (.getElementById js/document \"app\"))\n(def position (atom [51.505, -0.09]))\n(rum/defc app < rum/reactive\n  {:did-mount\n   (fn [state]\n     #_(js/console.log rain-leaflet)\n     (.addTo\n      (esri-leaflet/basemapLayer \"Gray\")\n      (.setView\n       (leaflet/map\n        \"mapid\"\n        #js\n        {:preferCanvas true\n         :keyboard false})\n       #js [51.505, -0.09], 13)) )}\n  []\n  [:div#mapid\n   ]\n   )\n(def location (atom []))\n(defn init-keybindings []\n  (letfn [(left [] (js/console.log \"LEFT\"))\n          (right [] (js/console.log \"RIGHT\"))\n          (up [] (js/console.log \"UP\"))\n          (down [] (js/console.log \"DOWN\"))\n          (space []\n            (js/console.log\n             (js/navigator.geolocation.getCurrentPosition\n              #(reset! location (.-coords %))\n              js/console.log))\n            (if-not js/navigator.geolocation\n              (js/navigator.geolocation.getCurrentPosition\n               #(reset! location %)\n               js/console.log))\n            (js/console.log @location))]\n    (key/bind! \"space\" ::left\n               space)\n\n    (key/bind! \"left\" ::left\n     left)\n    (key/bind!\n     \"right\"\n     ::right\n     right)\n    (key/bind!\n     \"up\"\n     ::up\n     up)\n    (key/bind!\n     \"down\"\n     ::down\n     down)))\n\n(defn refresh []\n  (init-keybindings)\n  (rum/mount (app) root-element))\n\n(defn ^:export init []\n  (refresh))\n\n"]}