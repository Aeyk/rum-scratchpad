shadow$provide.module$node_modules$static_eval$index=function(global,require,module,exports){function isUnsafeProperty(name){return"constructor"===name||"__proto__"===name}var unparse=require("module$node_modules$escodegen$escodegen").generate;module.exports=function(ast,vars,opts){opts||(opts={});var rejectAccessToMethodsOnFunctions=!opts.allowAccessToMethodsOnFunctions;vars||(vars={});var FAIL={};ast=function walk(node,noExecute){if("Literal"===node.type)return node.value;if("UnaryExpression"===
node.type){var val=walk(node.argument,noExecute);return"+"===node.operator?+val:"-"===node.operator?-val:"~"===node.operator?~val:"!"===node.operator?!val:FAIL}if("ArrayExpression"===node.type){var xs=[];val=0;for(var l=node.elements.length;val<l;val++){var x=walk(node.elements[val],noExecute);if(x===FAIL)return FAIL;xs.push(x)}return xs}if("ObjectExpression"===node.type){l={};for(val=0;val<node.properties.length;val++){x=node.properties[val];xs=null===x.value?x.value:walk(x.value,noExecute);if(xs===
FAIL)return FAIL;l[x.key.value||x.key.name]=xs}return l}if("BinaryExpression"===node.type||"LogicalExpression"===node.type){val=node.operator;if("\x26\x26"===val){l=walk(node.left);if(l===FAIL)return FAIL;if(!l)return l;node=walk(node.right);return node===FAIL?FAIL:node}if("||"===val){l=walk(node.left);if(l===FAIL)return FAIL;if(l)return l;node=walk(node.right);return node===FAIL?FAIL:node}l=walk(node.left,noExecute);if(l===FAIL)return FAIL;node=walk(node.right,noExecute);return node===FAIL?FAIL:
"\x3d\x3d"===val?l==node:"\x3d\x3d\x3d"===val?l===node:"!\x3d"===val?l!=node:"!\x3d\x3d"===val?l!==node:"+"===val?l+node:"-"===val?l-node:"*"===val?l*node:"/"===val?l/node:"%"===val?l%node:"\x3c"===val?l<node:"\x3c\x3d"===val?l<=node:"\x3e"===val?l>node:"\x3e\x3d"===val?l>=node:"|"===val?l|node:"\x26"===val?l&node:"^"===val?l^node:FAIL}if("Identifier"===node.type)return{}.hasOwnProperty.call(vars,node.name)?vars[node.name]:FAIL;if("ThisExpression"===node.type)return{}.hasOwnProperty.call(vars,"this")?
vars["this"]:FAIL;if("CallExpression"===node.type){xs=walk(node.callee,noExecute);if(xs===FAIL||"function"!==typeof xs)return FAIL;var ctx=node.callee.object?walk(node.callee.object,noExecute):FAIL;ctx===FAIL&&(ctx=null);var args=[];val=0;for(l=node.arguments.length;val<l;val++){x=walk(node.arguments[val],noExecute);if(x===FAIL)return FAIL;args.push(x)}return noExecute?void 0:xs.apply(ctx,args)}if("MemberExpression"===node.type){l=walk(node.object,noExecute);if(l===FAIL||"function"==typeof l&&rejectAccessToMethodsOnFunctions)return FAIL;
if("Identifier"===node.property.type&&!node.computed)return isUnsafeProperty(node.property.name)?FAIL:l[node.property.name];x=walk(node.property,noExecute);return null===x||x===FAIL||isUnsafeProperty(x)?FAIL:l[x]}if("ConditionalExpression"===node.type)return val=walk(node.test,noExecute),val===FAIL?FAIL:val?walk(node.consequent):walk(node.alternate,noExecute);if("ExpressionStatement"===node.type)return val=walk(node.expression,noExecute),val===FAIL?FAIL:val;if("ReturnStatement"===node.type)return walk(node.argument,
noExecute);if("FunctionExpression"===node.type){noExecute=node.body.body;var oldVars={};Object.keys(vars).forEach(function(element){oldVars[element]=vars[element]});for(val=0;val<node.params.length;val++)if(l=node.params[val],"Identifier"==l.type)vars[l.name]=null;else return FAIL;for(val in noExecute)if(walk(noExecute[val],!0)===FAIL)return FAIL;vars=oldVars;noExecute=Object.keys(vars);val=noExecute.map(function(key){return vars[key]});return Function(noExecute.join(", "),"return "+unparse(node)).apply(null,
val)}if("TemplateLiteral"===node.type){l="";for(val=0;val<node.expressions.length;val++)l+=walk(node.quasis[val],noExecute),l+=walk(node.expressions[val],noExecute);return l+=walk(node.quasis[val],noExecute)}return"TaggedTemplateExpression"===node.type?(noExecute=walk(node.tag,noExecute),val=node.quasi,node=val.quasis.map(walk),val=val.expressions.map(walk),noExecute.apply(null,[node].concat(val))):"TemplateElement"===node.type?node.value.cooked:FAIL}(ast);return ast===FAIL?void 0:ast}}
//# sourceMappingURL=module$node_modules$static_eval$index.js.map
