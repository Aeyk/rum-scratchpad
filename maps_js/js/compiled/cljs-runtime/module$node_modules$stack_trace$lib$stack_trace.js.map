{
"version":3,
"file":"module$node_modules$stack_trace$lib$stack_trace.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/stack-trace/lib/stack-trace.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$stack_trace$lib$stack_trace\"] = function(global,require,module,exports) {\nexports.get = function(belowFn) {\n  var oldLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n\n  var dummyObject = {};\n\n  var v8Handler = Error.prepareStackTrace;\n  Error.prepareStackTrace = function(dummyObject, v8StackTrace) {\n    return v8StackTrace;\n  };\n  Error.captureStackTrace(dummyObject, belowFn || exports.get);\n\n  var v8StackTrace = dummyObject.stack;\n  Error.prepareStackTrace = v8Handler;\n  Error.stackTraceLimit = oldLimit;\n\n  return v8StackTrace;\n};\n\nexports.parse = function(err) {\n  if (!err.stack) {\n    return [];\n  }\n\n  var self = this;\n  var lines = err.stack.split('\\n').slice(1);\n\n  return lines\n    .map(function(line) {\n      if (line.match(/^\\s*[-]{4,}$/)) {\n        return self._createParsedCallSite({\n          fileName: line,\n          lineNumber: null,\n          functionName: null,\n          typeName: null,\n          methodName: null,\n          columnNumber: null,\n          'native': null,\n        });\n      }\n\n      var lineMatch = line.match(/at (?:(.+)\\s+)?\\(?(?:(.+?):(\\d+):(\\d+)|([^)]+))\\)?/);\n      if (!lineMatch) {\n        return;\n      }\n\n      var object = null;\n      var method = null;\n      var functionName = null;\n      var typeName = null;\n      var methodName = null;\n      var isNative = (lineMatch[5] === 'native');\n\n      if (lineMatch[1]) {\n        var methodMatch = lineMatch[1].match(/([^\\.]+)(?:\\.(.+))?/);\n        object = methodMatch[1];\n        method = methodMatch[2];\n        functionName = lineMatch[1];\n        typeName = 'Object';\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = null;\n        functionName = '';\n      }\n\n      var properties = {\n        fileName: lineMatch[2] || null,\n        lineNumber: parseInt(lineMatch[3], 10) || null,\n        functionName: functionName,\n        typeName: typeName,\n        methodName: methodName,\n        columnNumber: parseInt(lineMatch[4], 10) || null,\n        'native': isNative,\n      };\n\n      return self._createParsedCallSite(properties);\n    })\n    .filter(function(callSite) {\n      return !!callSite;\n    });\n};\n\nexports._createParsedCallSite = function(properties) {\n  var methods = {};\n  for (var property in properties) {\n    var prefix = 'get';\n    if (property === 'native') {\n      prefix = 'is';\n    }\n    var method = prefix + property.substr(0, 1).toUpperCase() + property.substr(1);\n\n    (function(property) {\n      methods[method] = function() {\n        return properties[property];\n      }\n    })(property);\n  }\n\n  var callSite = Object.create(methods);\n  for (var property in properties) {\n    callSite[property] = properties[property];\n  }\n\n  return callSite;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","get","exports.get","belowFn","oldLimit","Error","stackTraceLimit","Infinity","dummyObject","v8Handler","prepareStackTrace","Error.prepareStackTrace","v8StackTrace","captureStackTrace","stack","parse","exports.parse","err","self","split","lines","slice","map","line","match","_createParsedCallSite","fileName","lineNumber","functionName","typeName","methodName","columnNumber","lineMatch","object","method","isNative","methodMatch","properties","parseInt","filter","callSite","exports._createParsedCallSite","methods","property","prefix","substr","toUpperCase","Object","create"]
}
