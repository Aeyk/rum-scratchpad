{"version":3,"sources":["rum_workshop/scratch.cljs"],"mappings":"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","names":["cljs.core/enable-console-print!","rum-workshop.scratch/enter-key-code","rum-workshop.scratch/my-name","cljs.core.atom","rum-workshop.scratch/db","rum-workshop.scratch/input-text","rum.core/cursor-in","rum-workshop.scratch/todo-list","rum-workshop.scratch/root-element","js/document","rum-workshop.scratch/counts","cljs.core/add-watch","_","rum-workshop.scratch/refresh","rum.core/build-defc","js/React.createElement","sablono.interpreter/interpret","rum-workshop.scratch/clicker-counter","e","cljs.core.swap_BANG_","cljs.core/inc","cljs.core/deref","cljs.core.pr_str","sablono.interpreter/create-element","rum-workshop.scratch/input-text-area","rum.core/reactive","rum.core/react","cljs.core/reset!","js/console.log","cljs.core._EQ_","cljs.core/seq","cljs.core/conj","cljs.core.into_array","iter__4529__auto__","s__28664","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__28666","cljs.core/chunk-buffer","i__28665","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__28663","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","rum-workshop.scratch/todo-list-items","todo","cljs.core.gensym","rum-workshop.scratch/state","attrs28667","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","rum-workshop.scratch/app*","rum.core/mount","rum-workshop.scratch/init","cljs.core/chunk-first"],"sourcesContent":["(ns rum-workshop.scratch\n  (:require [rum.core :as rum]))\n\n(enable-console-print!)\n\n(def enter-key-code 13)\n\n(def my-name (atom \"\"))\n\n(def db (atom {:input-text \"\"\n               :todo-list []}))\n\n(def input-text (rum/cursor-in db [:input-text]))\n\n(def todo-list (rum/cursor-in db [:todo-list]))\n\n(def root-element (.getElementById js/document \"app\"))\n\n(def counts (atom 0))\n\n(declare refresh)\n\n(add-watch counts ::key (fn [_ _ _ _]\n                          (refresh)))\n\n(declare refresh)\n\n(rum/defc clicker-counter []\n  [:div.clicker\n   {:on-click \n    (fn[e] (swap! counts inc))}\n    (pr-str @counts)])\n\n\n(rum/defc input-text-area < rum/reactive \n  []\n  [:div\n   [:input \n    {:value (rum/react input-text)\n     :on-change (fn [e] (reset! input-text (.. e -target -value)))\n     :on-key-down\n     (fn [e] \n       (js/console.log (.-keyCode e) @input-text)\n       (when (and (= (.-keyCode e) enter-key-code)\n               (seq @input-text))        \n         (swap! todo-list conj {:done false \n                                :text @input-text})\n         (reset! input-text \"\")))}]\n   [:button\n   {:on-mouse-down\n    (fn [e]\n      (.preventDefault e)\n      (swap! todo-list conj {:text @input-text})\n      (reset! input-text \"\"))} \n    \"Submit\"\n    ]])\n\n(rum/defc todo-list-items < rum/reactive\n  []\n  [:ul\n   (for [todo  @todo-list]\n     [:li \n      {:key (gensym)\n       :on-mouse-down\n       (fn [e]\n         )}      \n       todo])])\n\n(def state (atom {}))\n\n(rum/defc app* < rum/reactive\n  []\n  [:div \n   (input-text-area)\n   (todo-list-items)\n   ;; (clicker-counter)\n   [:p \n    {:value (rum/react input-text)}\n    @input-text]])\n\n\n(defn refresh [] (rum/mount (app*) root-element))\n\n(defn ^:export init []\n  (refresh))\n"]}