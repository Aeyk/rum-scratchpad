shadow$provide.module$node_modules$sample_player$lib$player=function(global,require,module,exports){function envelope(ac,options,opts){var env=ADSR(ac),adsr=options.adsr||opts.adsr;PARAMS.forEach(function(name,i){env[name]=adsr?adsr[i]:options[name]||opts[name]});env.value.value="number"===typeof options.gain?options.gain:"number"===typeof opts.gain?opts.gain:1;return env}function centsToRate(cents){return cents?Math.pow(2,cents/1200):1}var ADSR=require("module$node_modules$adsr$index"),EMPTY={},
DEFAULTS={gain:1,attack:.01,decay:.1,sustain:.9,release:.3,loop:!1,cents:0,loopStart:0,loopEnd:0},PARAMS=["attack","decay","sustain","release"];module.exports=function(ac,source,options$jscomp$0){function track(name,node){node.id=nextId++;tracked[node.id]=node;node.source.onended=function(){var now=ac.currentTime;node.source.disconnect();node.env.disconnect();node.disconnect();player.emit("ended",now,node.id,node)};return node.id}function createNode(name,buffer,options){var node=ac.createGain();node.gain.value=
0;node.connect(out);node.env=envelope(ac,options,opts$jscomp$0);node.env.connect(node.gain);node.source=ac.createBufferSource();node.source.buffer=buffer;node.source.connect(node);node.source.loop=options.loop||opts$jscomp$0.loop;node.source.playbackRate.value=centsToRate(options.cents||opts$jscomp$0.cents);node.source.loopStart=options.loopStart||opts$jscomp$0.loopStart;node.source.loopEnd=options.loopEnd||opts$jscomp$0.loopEnd;node.stop=function(when){when=when||ac.currentTime;player.emit("stop",
when,name);when=node.env.stop(when);node.source.stop(when)};return node}var connected=!1,nextId=0,tracked={},out=ac.createGain();out.gain.value=1;var opts$jscomp$0=Object.assign({},DEFAULTS,options$jscomp$0),player={context:ac,out:out,opts:opts$jscomp$0};source instanceof AudioBuffer?player.buffer=source:player.buffers=source;player.start=function(name,when,options){if(player.buffer&&null!==name)return player.start(null,name,when);var buffer=name?player.buffers[name]:player.buffer;if(buffer){if(connected)return options=
options||EMPTY,when=Math.max(ac.currentTime,when||0),player.emit("start",when,name,options),buffer=createNode(name,buffer,options),buffer.id=track(name,buffer),buffer.env.start(when),buffer.source.start(when),player.emit("started",when,buffer.id,buffer),options.duration&&buffer.stop(when+options.duration),buffer;console.warn("SamplePlayer not connected to any node.")}else console.warn("Buffer "+name+" not found.")};player.play=function(name,when,options){return player.start(name,when,options)};player.stop=
function(when,ids){var node;ids=ids||Object.keys(tracked);return ids.map(function(id){node=tracked[id];if(!node)return null;node.stop(when);return node.id})};player.connect=function(dest){connected=!0;out.connect(dest);return player};player.emit=function(event,when,obj,opts){if(player.onevent)player.onevent(event,when,obj,opts);(event=player["on"+event])&&event(when,obj,opts)};return player}}
//# sourceMappingURL=module$node_modules$sample_player$lib$player.js.map
