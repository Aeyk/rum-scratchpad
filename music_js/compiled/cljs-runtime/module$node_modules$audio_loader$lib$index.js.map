{
"version":3,
"file":"module$node_modules$audio_loader$lib$index.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/audio-loader/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$audio_loader$lib$index\"] = function(global,require,module,exports) {\n'use strict'\n\nvar base64 = require('./base64')\nvar fetch = require('./fetch')\n\n// Given a regex, return a function that test if against a string\nfunction fromRegex (r) {\n  return function (o) { return typeof o === 'string' && r.test(o) }\n}\n// Try to apply a prefix to a name\nfunction prefix (pre, name) {\n  return typeof pre === 'string' ? pre + name\n    : typeof pre === 'function' ? pre(name)\n    : name\n}\n\n/**\n * Load one or more audio files\n *\n *\n * Possible option keys:\n *\n * - __from__ {Function|String}: a function or string to convert from file names to urls.\n * If is a string it will be prefixed to the name:\n * `load(ac, 'snare.mp3', { from: 'http://audio.net/samples/' })`\n * If it's a function it receives the file name and should return the url as string.\n * - __only__ {Array} - when loading objects, if provided, only the given keys\n * will be included in the decoded object:\n * `load(ac, 'piano.json', { only: ['C2', 'D2'] })`\n *\n * @param {AudioContext} ac - the audio context\n * @param {Object} source - the object to be loaded\n * @param {Object} options - (Optional) the load options for that object\n * @param {Object} defaultValue - (Optional) the default value to return as\n * in a promise if not valid loader found\n */\nfunction load (ac, source, options, defVal) {\n  var loader =\n    // Basic audio loading\n      isArrayBuffer(source) ? loadArrayBuffer\n    : isAudioFileName(source) ? loadAudioFile\n    : isPromise(source) ? loadPromise\n    // Compound objects\n    : isArray(source) ? loadArrayData\n    : isObject(source) ? loadObjectData\n    : isJsonFileName(source) ? loadJsonFile\n    // Base64 encoded audio\n    : isBase64Audio(source) ? loadBase64Audio\n    : isJsFileName(source) ? loadMidiJSFile\n    : null\n\n  var opts = options || {}\n  return loader ? loader(ac, source, opts)\n    : defVal ? Promise.resolve(defVal)\n    : Promise.reject('Source not valid (' + source + ')')\n}\nload.fetch = fetch\n\n// BASIC AUDIO LOADING\n// ===================\n\n// Load (decode) an array buffer\nfunction isArrayBuffer (o) { return o instanceof ArrayBuffer }\nfunction loadArrayBuffer (ac, array, options) {\n  return new Promise(function (done, reject) {\n    ac.decodeAudioData(array,\n      function (buffer) { done(buffer) },\n      function () { reject(\"Can't decode audio data (\" + array.slice(0, 30) + '...)') }\n    )\n  })\n}\n\n// Load an audio filename\nvar isAudioFileName = fromRegex(/\\.(mp3|wav|ogg)(\\?.*)?$/i)\nfunction loadAudioFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'arraybuffer'), options)\n}\n\n// Load the result of a promise\nfunction isPromise (o) { return o && typeof o.then === 'function' }\nfunction loadPromise (ac, promise, options) {\n  return promise.then(function (value) {\n    return load(ac, value, options)\n  })\n}\n\n// COMPOUND OBJECTS\n// ================\n\n// Try to load all the items of an array\nvar isArray = Array.isArray\nfunction loadArrayData (ac, array, options) {\n  return Promise.all(array.map(function (data) {\n    return load(ac, data, options, data)\n  }))\n}\n\n// Try to load all the values of a key/value object\nfunction isObject (o) { return o && typeof o === 'object' }\nfunction loadObjectData (ac, obj, options) {\n  var dest = {}\n  var promises = Object.keys(obj).map(function (key) {\n    if (options.only && options.only.indexOf(key) === -1) return null\n    var value = obj[key]\n    return load(ac, value, options, value).then(function (audio) {\n      dest[key] = audio\n    })\n  })\n  return Promise.all(promises).then(function () { return dest })\n}\n\n// Load the content of a JSON file\nvar isJsonFileName = fromRegex(/\\.json(\\?.*)?$/i)\nfunction loadJsonFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'text').then(JSON.parse), options)\n}\n\n// BASE64 ENCODED FORMATS\n// ======================\n\n// Load strings with Base64 encoded audio\nvar isBase64Audio = fromRegex(/^data:audio/)\nfunction loadBase64Audio (ac, source, options) {\n  var i = source.indexOf(',')\n  return load(ac, base64.decode(source.slice(i + 1)).buffer, options)\n}\n\n// Load .js files with MidiJS soundfont prerendered audio\nvar isJsFileName = fromRegex(/\\.js(\\?.*)?$/i)\nfunction loadMidiJSFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'text').then(midiJsToJson), options)\n}\n\n// convert a MIDI.js javascript soundfont file to json\nfunction midiJsToJson (data) {\n  var begin = data.indexOf('MIDI.Soundfont.')\n  if (begin < 0) throw Error('Invalid MIDI.js Soundfont format')\n  begin = data.indexOf('=', begin) + 2\n  var end = data.lastIndexOf(',')\n  return JSON.parse(data.slice(begin, end) + '}')\n}\n\nif (typeof module === 'object' && module.exports) module.exports = load\nif (typeof window !== 'undefined') window.loadAudio = load\n\n};"],
"names":["shadow$provide","global","require","module","exports","fromRegex","r","o","test","prefix","pre","name","load","ac","source","options","defVal","loader","ArrayBuffer","loadArrayBuffer","isAudioFileName","loadAudioFile","then","loadPromise","isArray","loadArrayData","loadObjectData","isJsonFileName","loadJsonFile","isBase64Audio","loadBase64Audio","isJsFileName","loadMidiJSFile","opts","Promise","resolve","reject","array","done","decodeAudioData","buffer","slice","url","from","fetch","promise","value","all","map","data","obj","dest","promises","Object","keys","key","only","indexOf","audio","JSON","parse","i","base64","decode","midiJsToJson","begin","Error","end","lastIndexOf","Array","window","loadAudio"]
}
