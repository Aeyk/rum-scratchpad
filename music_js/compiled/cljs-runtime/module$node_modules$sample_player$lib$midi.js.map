{
"version":3,
"file":"module$node_modules$sample_player$lib$midi.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,0CAAf,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACvG,IAAIC,YAAcH,OAAA,CAAQ,gDAAR,CAElBC,OAAA,CAAOC,OAAP,CAAiBE,QAAS,CAACC,MAAD,CAAS,CAmBjCA,MAAA,CAAOC,YAAP,CAAsBC,QAAS,CAACC,KAAD,CAAQC,OAAR,CAAiB,CAC9C,IAAIC,QAAU,EAAd,CACIC,KAAOF,OAAPE,EAAkB,EADtB,CAEIC,KAAOD,IAAPC,CAAYA,IAAZA,EAAoB,QAAS,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAP,CAAa,GAAf,CAEvCL,MAAA,CAAMM,aAAN,CAAsBC,QAAS,CAACC,GAAD,CAAM,CAC/BC,GAAAA,CAAKD,GAAA,CAAIE,WAAJ,CAAkBF,GAAlB,CAAwBb,WAAA,CAAYa,GAAZ,CACV,SAAvB,GAAIC,GAAJ,CAAOC,WAAP,EAAmD,CAAnD,GAAmCD,GAAnC,CAAsCE,QAAtC,GACEF,GADF,CACKC,WADL,CACmB,SADnB,CAGA,IAAIE,CAAAT,IAAAS,CAAKA,OAAT,EAAoBH,GAApB,CAAuBG,OAAvB;AAAmCT,IAAnC,CAAwCS,OAAxC,CAEA,OAAQH,GAAR,CAAWC,WAAX,EACE,KAAK,QAAL,CACER,OAAA,CAAQO,GAAR,CAAWI,GAAX,CAAA,CAAkBhB,MAAA,CAAOiB,IAAP,CAAYL,GAAZ,CAAeI,GAAf,CAAoB,CAApB,CAAuB,CAAET,KAAMA,IAAA,CAAKK,GAAL,CAAQE,QAAR,CAAR,CAAvB,CAClB,MACF,MAAK,SAAL,CACMT,OAAA,CAAQO,GAAR,CAAWI,GAAX,CAAJ,GACEX,OAAA,CAAQO,GAAR,CAAWI,GAAX,CAAA,CAAgBE,IAAhB,EACA,CAAA,OAAOb,OAAA,CAAQO,GAAR,CAAWI,GAAX,CAFT,CALJ,CAPmC,CAmBrC,OAAOhB,OAxBuC,CA0BhD,OAAOA,OA7C0B,CAHoE;",
"sources":["node_modules/sample-player/lib/midi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$sample_player$lib$midi\"] = function(global,require,module,exports) {\nvar midimessage = require('midimessage')\n\nmodule.exports = function (player) {\n  /**\n  * Connect a player to a midi input\n  *\n  * The options accepts:\n  *\n  * - channel: the channel to listen to. Listen to all channels by default.\n  *\n  * @param {MIDIInput} input\n  * @param {Object} options - (Optional)\n  * @return {SamplePlayer} the player\n  * @example\n  * var piano = player(...)\n  * window.navigator.requestMIDIAccess().then(function (midiAccess) {\n  *   midiAccess.inputs.forEach(function (midiInput) {\n  *     piano.listenToMidi(midiInput)\n  *   })\n  * })\n  */\n  player.listenToMidi = function (input, options) {\n    var started = {}\n    var opts = options || {}\n    var gain = opts.gain || function (vel) { return vel / 127 }\n\n    input.onmidimessage = function (msg) {\n      var mm = msg.messageType ? msg : midimessage(msg)\n      if (mm.messageType === 'noteon' && mm.velocity === 0) {\n        mm.messageType = 'noteoff'\n      }\n      if (opts.channel && mm.channel !== opts.channel) return\n\n      switch (mm.messageType) {\n        case 'noteon':\n          started[mm.key] = player.play(mm.key, 0, { gain: gain(mm.velocity) })\n          break\n        case 'noteoff':\n          if (started[mm.key]) {\n            started[mm.key].stop()\n            delete started[mm.key]\n          }\n          break\n      }\n    }\n    return player\n  }\n  return player\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","midimessage","module.exports","player","listenToMidi","player.listenToMidi","input","options","started","opts","gain","vel","onmidimessage","input.onmidimessage","msg","mm","messageType","velocity","channel","key","play","stop"]
}
